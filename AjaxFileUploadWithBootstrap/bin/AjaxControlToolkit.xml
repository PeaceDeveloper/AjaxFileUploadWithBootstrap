<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AjaxControlToolkit</name>
    </assembly>
    <members>
        <member name="T:AjaxControlToolkit.Accordion">
            <summary>
            The Accordion control represents a series of panes that can be viewed
            one at a time.  The control is used to create "strongly typed" access
            to the AccordionBehavior.  Its major purpose is to structure the content
            in a way that the AccordionBehavior can understand it. 
            </summary>
        </member>
        <member name="E:AjaxControlToolkit.Accordion.ItemCreated">
            <summary>
            An event to raise when an item (i.e. Pane's Header or Content) is created during data binding
            </summary>
        </member>
        <member name="E:AjaxControlToolkit.Accordion.ItemDataBound">
            <summary>
            An event to raise when an item (i.e. Pane's Header or Content) is data bound
            </summary>
        </member>
        <member name="E:AjaxControlToolkit.Accordion.ItemCommand">
            <summary>
            An event to raise when a command is fired
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Accordion.TransitionDuration">
            <summary>
            Length of the transition animation in milliseconds. The default is 500
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Accordion.FramesPerSecond">
            <summary>
            The number of frames per second used in animation effects' transition. 
            This is used to tune performance when using FadeTransition, 
            a large number of Accordion Panes, etc. 
            The default is 30.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Accordion.FadeTransitions">
            <summary>
            Whether or not to use a fade effect when transitioning between selected
            Accordion Panes. The default is false
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Accordion.HeaderCssClass">
            <summary>
            The default Header CSS class
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Accordion.HeaderSelectedCssClass">
            <summary>
            The default selected Header CSS Class
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Accordion.ContentCssClass">
            <summary>
            The default Content CSS class
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Accordion.AutoSize">
            <summary> 
            Determines how to controll resizing of the Accordion.
            If it is set to None, then the Accordion can grow as large or as small as necessary. 
            If it is set to Limit, then the Accordion will always be less than or equal to its Height. 
            If it is set to Fill then it will always be equal to its height. 
            The default is None.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Accordion.SelectedIndex">
            <summary>
            Index of the AccordionPane to be displayed
            (this property must be set before OnPreRender). The default is 0
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Accordion.RequireOpenedPane">
            <summary>
            Whether or not clicking the header will close the currently opened pane (leaving
            all the Accordion's panes closed). The default is true
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Accordion.SuppressHeaderPostbacks">
            <summary> 
            Whether or not we suppress the client-side click handlers of any elements (including server
            controls like Button or HTML elements like anchor) in the header sections of the Accordion.
            The default is false
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Accordion.Panes">
            <summary> 
            A collection of child panes in the Accordion
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Accordion.Controls">
            <summary>
            Prevent the Controls property from appearing in the editor (so
            that people will use the Panes collection instead)
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Accordion.HeaderTemplate">
            <summary>
            A template for the Header of databound panes
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Accordion.ContentTemplate">
            <summary>
            A template for the content of databound panes
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Accordion.DataSource">
            <summary>
            The data source that provides data for populating 
            the list of AccordionPanes
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Accordion.DataSourceID">
            <summary>
            The ID of the DataControl that this control should use to retrieve its data source. 
            When the control is bound to a DataControl, it can retrieve a data source instance on demand,
            and thereby attempt to work in auto-DataBind mode.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Accordion.DataMember">
            <summary>
            A member in the DataSource to bind to
            </summary>
        </member>
        <member name="M:AjaxControlToolkit.Accordion.FindControl(System.String)">
            <summary>
            Override FindControl to look first at this control, then check each
            of its child AccordionPanes for the control
            </summary>
            <param name="id" type="String">ID of the control to find</param>
            <returns></returns>
        </member>
        <member name="M:AjaxControlToolkit.Accordion.DataBind">
            <summary>
            Bind the Accordion to its DataSource
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.Design.TypedControlIDConverter`1">
            A simple derived class of ControlID converter that lets us filter based on a type.
            This lets us have drop-downs in the property browser that pick a given Button or TextBox, etc.
        </member>
        <member name="T:AjaxControlToolkit.AjaxFileUpload">
            <summary>
            AjaxFileUpload is an ASP.NET AJAX Control that allows you to asynchronously upload files to the server.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AjaxFileUpload.ThrobberID">
            <summary>
            The ID of a control that is shown on the file upload.
            The throbber image is displayed for browsers that do not support the HTML5 File API or server-side polling.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AjaxFileUpload.IsInFileUploadPostBack">
            <summary>
             This will be true when a postback will be performed from the control. 
             This can be used to avoid execution of unnecessary code during a partial postback. 
             The default is false.
             </summary>
        </member>
        <member name="P:AjaxControlToolkit.AjaxFileUpload.MaximumNumberOfFiles">
            <summary>
            A maximum number of files in an upload queue.
            The default is 10.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AjaxFileUpload.AllowedFileTypes">
            <summary>
            A comma-separated list of allowed file extensions.
            The default is an empty string.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AjaxFileUpload.ChunkSize">
            <summary>
            The size of a chunk used by HTML5 to upload large files in bytes.
            The default is 4096.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AjaxFileUpload.FileStatusContainerCssClass">
            <summary>
            Css class for file status container
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AjaxFileUpload.ClearFileListAfterUpload">
            <summary>
            Whether or not to hide file upload list container after the uploading finished
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AjaxFileUpload.UseAbsoluteHandlerPath">
            <summary>
            Whether or not to use absolute path for AjaxFileUploadHandler
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AjaxFileUpload.Mode">
            <summary>
             How AjaxFileUpload displays a progress bar.
             The default is Auto.
             </summary>
        </member>
        <member name="E:AjaxControlToolkit.AjaxFileUpload.UploadStart">
            <summary>
            An event raised when the file upload starts.
            </summary>
        </member>
        <member name="E:AjaxControlToolkit.AjaxFileUpload.UploadComplete">
            <summary>
            An event raised when the file upload is complete.
            </summary>
        </member>
        <member name="E:AjaxControlToolkit.AjaxFileUpload.UploadCompleteAll">
            <summary>
            An event handler that will be raised when the UploadComplete event is raised 
            in all files in an upload queue, or when a user presses the Cancel button to stop uploading.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AjaxFileUpload.OnClientUploadStart">
            <summary>
            The name of a JavaScript function executed on the client side before any files are uploaded.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AjaxFileUpload.OnClientUploadComplete">
            <summary>
            The name of a JavaScript function executed on the client side after a file is uploaded successfully.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AjaxFileUpload.OnClientUploadCompleteAll">
            <summary>
            The client script that executes when all of files in queue uploaded, 
            or when user hits Cancel button to stop uploading
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AjaxFileUpload.OnClientUploadError">
            <summary>
            The name of a JavaScript function executed on the client side if the file upload failed.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AjaxFileUpload.ServerPollingSupport">
            <summary>
            Whether or not AjaxFileUpload supports server polling.
            </summary>
        </member>
        <member name="M:AjaxControlToolkit.AjaxFileUpload.SaveAs(System.String)">
            <summary>
            Saves the uploaded file with the specified file name
            </summary>
            <param name="fileName" type="String">Name of the file to save</param>
        </member>
        <member name="T:AjaxControlToolkit.AlwaysVisibleControlExtender">
            <summary>
            An extender used to add constant visibility to an ASP.NET control. 
            The control that is extended then always moves to a fixed position 
            in the page regardless of how the body is resized or scrolled.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AlwaysVisibleControlExtender.HorizontalOffset">
            <summary>
            A distance to the horizontal edge of the browser in pixels from the same side of the target control. 
            The default is 0.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AlwaysVisibleControlExtender.HorizontalSide">
            <summary>
            A horizontal side of the browser to anchor the control against.
            The default is the Left.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AlwaysVisibleControlExtender.VerticalOffset">
            <summary>
            A distance to the vertical edge of the browser in pixels from the same side of the target control.
            The default is 0.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AlwaysVisibleControlExtender.VerticalSide">
            <summary>
            A vertical side of the browser to anchor the control against.
            The default is the Top.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AlwaysVisibleControlExtender.ScrollEffectDuration">
            <summary>
            Length of the scrolling effectn seconds when the target control is repositioned.
            The default is 1.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AlwaysVisibleControlExtender.UseAnimation">
            <summary>
            Whether or not to animate the element's transposition.
            The default is false.
            </summary>
        </member>
        <member name="M:AjaxControlToolkit.AlwaysVisibleControlExtender.EnsureValid">
            <summary>
            Validates offsets.
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.AnimationExtender">
            <summary>
            An extender used to play animations when a control's events fire.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AnimationExtender.OnLoad">
            <summary>
            OnLoad animation
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AnimationExtender.OnClick">
            <summary>
            OnClick animation
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AnimationExtender.OnMouseOver">
            <summary>
            OnMouseOver animation
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AnimationExtender.OnMouseOut">
            <summary>
            OnMouseOut animation
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AnimationExtender.OnHoverOver">
            <summary>
            OnHoverOver animation
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AnimationExtender.OnHoverOut">
            <summary>
            OnHoverOut animation
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.AreaChart">
            <summary>
            The AreaChart control allows rendering an area chart from one or more series of values.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AreaChart.DisplayValues">
            <summary>
            Whether or not show series values.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AreaChart.CategoriesAxis">
            <summary>
            Comma-separated text for each category rendered below X axis
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AreaChart.ClientSeries">
            <summary>
            A list of series.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AreaChart.Series">
            <summary>
            A list of series with designer support.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AreaChart.ChartType">
            <summary>
            A chart type. The default value is Basic.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AreaChart.ValueAxisLines">
            <summary>
            Value axis lines count. The default value is 9
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AreaChart.ValueAxisLineColor">
            <summary>
            Value axis line color
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AreaChart.CategoryAxisLineColor">
            <summary>
            Category axis line color
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AreaChart.BaseLineColor">
            <summary>
            Base line color
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.AsyncFileUpload">
            <summary>
            AsyncFileUpload is an ASP.NET AJAX Control that allows you to asynchronously upload files to the server.
            The file uploading results can be checked both on the server and client sides.
            </summary>
        </member>
        <member name="E:AjaxControlToolkit.AsyncFileUpload.UploadedComplete">
            <summary>
            Fires when the file is successfully uploaded.
            </summary>
        </member>
        <member name="E:AjaxControlToolkit.AsyncFileUpload.UploadedFileError">
            <summary>
            Fires when the uploaded file is corrupted.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AsyncFileUpload.OnClientUploadStarted">
            <summary>
            The name of a javascript function executed on the client side if the file upload started.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AsyncFileUpload.OnClientUploadComplete">
            <summary>
            The name of a javascript function executed on the client side after a file is successfully uploaded.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AsyncFileUpload.OnClientUploadError">
            <summary>
            The name of a javascript function executed on the client side if the file upload failed.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AsyncFileUpload.FileBytes">
            <summary>
            Uploaded file bytes
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AsyncFileUpload.ThrobberID">
            <summary>
            ID of a control that is shown while the file is being uploaded.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AsyncFileUpload.CompleteBackColor">
            <summary>
            The control's background color on upload complete. The default value is Lime.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AsyncFileUpload.UploadingBackColor">
            <summary>
            The control's background color when uploading is in progress.
            The default value is White.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AsyncFileUpload.ErrorBackColor">
            <summary>
            The control's background color on an upload error.
            The default value is Red.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AsyncFileUpload.Width">
            <summary>
            The control's width (Unit).
            The default value is 355px.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AsyncFileUpload.FailedValidation">
            <summary>
            Whether validation is failed
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AsyncFileUpload.UploaderStyle">
            <summary>
            The control's appearance style (Traditional, Modern). The default value is Traditional.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AsyncFileUpload.PostedFile">
            <summary>
            A HttpPostedFile object that provides access to the uploaded file
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AsyncFileUpload.HasFile">
            <summary>
            A bool value indicating whether the control contains a file
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AsyncFileUpload.FileName">
            <summary>
            Gets the name of a file on the client that is uploaded using the control.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AsyncFileUpload.ContentType">
            <summary>
            Gets the name of a file on the client that is uploaded using the control.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AsyncFileUpload.FileContent">
            <summary>
            Gets a Stream object that points to an uploaded file to prepare for reading the content of the file.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AsyncFileUpload.IsUploading">
            <summary>
            Whether a file is being uploaded.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AsyncFileUpload.PersistFile">
            <summary>
            Whether a file is stored in session.
            The default value is false.
            </summary>
        </member>
        <member name="M:AjaxControlToolkit.AsyncFileUpload.ClearAllFilesFromPersistedStore">
            <summary>
            Clears all uploaded files of a current control from session.
            </summary>
        </member>
        <member name="M:AjaxControlToolkit.AsyncFileUpload.ClearFileFromPersistedStore">
            <summary>
            Clears all uploaded files of current control from session
            </summary>
        </member>
        <member name="M:AjaxControlToolkit.AsyncFileUpload.SaveAs(System.String)">
            <summary>
            Saves the content of an uploaded file.
            </summary>
            <param name="fileName" type="String">Uploaded file name</param>
        </member>
        <member name="T:AjaxControlToolkit.BarChart">
            <summary>
            The BarChart control enables you to render a bar chart from one or more series of values.  
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BarChart.CategoriesAxis">
            <summary>
            This is a required property. You need to provide a set of values for
            the category axis to create a bar chart
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BarChart.ClientSeries">
            <summary>
            Provides a list of series to the client side. 
            The Values property is required for designer experience support, 
            because the editor always prevents providing values to the client side as ExtenderControlProperty at runtime.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BarChart.Series">
            <summary>
            A list of series.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BarChart.ChartType">
            <summary>
            A type of bar charts including Column, StackedColumn, Bar, and StackedBar.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BarChart.ValueAxisLines">
            <summary>
            Interval size for the value axis line.
            The default is 9
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BarChart.ValueAxisLineColor">
            <summary>
            A color of the value axis lines.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BarChart.CategoryAxisLineColor">
            <summary>
            A color of the category axis lines.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BarChart.BaseLineColor">
            <summary>
            A color of the base lines of the chart.
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.BubbleChart">
            <summary>
            The BubbleChart control enables you to render a bubble chart from one or more series of values. 
            This control is compatible with any browser that supports SVG including Internet Explorer 9 and above.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BubbleChart.BubbleChartClientValues">
            <summary>
            Provides a list of values to the client side. 
            The Values property is required for designer experience support, 
            because the editor always prevents providing values to the client side as ExtenderControlProperty at runtime.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BubbleChart.BubbleChartValues">
            <summary>
            A list of values.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BubbleChart.YAxisLines">
            <summary>
            Interval size for the Y axis line of the chart.
            The default is 6
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BubbleChart.XAxisLines">
            <summary>
            Iinterval size for the X axis line of the chart. 
            The default is 6
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BubbleChart.BubbleSizes">
            <summary>
            The number of different bubble sizes.
            The default is 5
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BubbleChart.YAxisLineColor">
            <summary>
            A color of the Y axis lines of the chart.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BubbleChart.XAxisLineColor">
            <summary>
            A color of the X axis lines of the chart.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BubbleChart.BaseLineColor">
            <summary>
            The color of the base lines of a chart.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BubbleChart.TooltipBackgroundColor">
            <summary>
            A background color of the tooltip box.
            The default is #FFC652
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BubbleChart.TooltipFontColor">
            <summary>
            A font color of the tooltip box.
            The default is #0E426C
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BubbleChart.TooltipBorderColor">
            <summary>
            A border color of the tooltip box. 
            The default is #B85B3E
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BubbleChart.XAxisLabel">
            <summary>
            Text/label to describe what data is in XAxis.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BubbleChart.YAxisLabel">
            <summary>
            Text/label to describe what data is in YAxis.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BubbleChart.BubbleLabel">
            <summary>
            Text/label that will be shown in the tooltip and describe a bubble value.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BubbleChart.AxislabelFontColor">
            <summary>
            The axis label font color
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.AutoCompleteExtender">
            <summary>
            AutoComplete extends any ASP.NET TextBox control. It associates that control with a
            popup panel to display words that begin with the prefix that is entered into the text box.   
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AutoCompleteExtender.MinimumPrefixLength">
            <summary>
            Minimum length of text before the webservice provides suggestions.
            The default is 3
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AutoCompleteExtender.CompletionInterval">
            <summary>
            Time in milliseconds when the timer will kick in to get suggestions using the web service.
            The default is 1000
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AutoCompleteExtender.CompletionSetCount">
            <summary>
            A number of suggestions to be provided.
            The default is 10
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AutoCompleteExtender.CompletionListElementID">
            <summary>
            ID of an element that will serve as the completion list.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AutoCompleteExtender.ServiceMethod">
            <summary>
            The web service method to be called
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AutoCompleteExtender.ServicePath">
            <summary>
            The path to the web service that the extender will pull the 
            word/sentence completions from. If this is not provided, the 
            service method should be a page method.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AutoCompleteExtender.ContextKey">
            <summary>
            User/page specific context provided to an optional overload of the web method described by ServiceMethod/ServicePath. 
            If the context key is used, it should have the same signature with an additional parameter named contextKey of a string type.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AutoCompleteExtender.UseContextKey">
            <summary>
            Whether or not the ContextKey property should be used.
            This will be automatically enabled if the ContextKey property is ever set (on either the client or the server). 
            If the context key is used, it should have the same signature with an additional parameter named contextKey of a string type.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AutoCompleteExtender.CompletionListCssClass">
            <summary>
            A CSS class that will be used to style the completion list flyout.	
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AutoCompleteExtender.CompletionListItemCssClass">
            <summary>
            A CSS class that will be used to style an item in the autocomplete list.	
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AutoCompleteExtender.CompletionListHighlightedItemCssClass">
            <summary>
            A CSS class that will be used to style a highlighted item in the autocomplete list.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AutoCompleteExtender.EnableCaching">
            <summary>
            A flag to denote whether client-side caching is enabled.
            The default is true.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AutoCompleteExtender.DelimiterCharacters">
            <summary>
            The character(s) used to separate words for autocomplete
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AutoCompleteExtender.FirstRowSelected">
            <summary>
            Determines if the first row of the Search Results is selected by default.
            The default is false.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AutoCompleteExtender.ShowOnlyCurrentWordInCompletionListItem">
            <summary>
            If delimiter characters are specified and ShowOnlyCurrentWordInCompletionListItem is set to true,
            then the completion list displays suggestions just for the current word, 
            otherwise, it displays the whole string that will show up in the TextBox 
            if that item is selected, which is the current default.
            The default is false.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AutoCompleteExtender.OnShow">
            <summary>
            OnShow animation
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AutoCompleteExtender.OnHide">
            <summary>
            OnHide animation
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AutoCompleteExtender.OnClientPopulating">
            <summary>
            A handler attached to the client-side populating event
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AutoCompleteExtender.OnClientPopulated">
            <summary>
            A handler attached to the client-side populated event
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AutoCompleteExtender.OnClientShowing">
            <summary>
            A handler attached to the client-side showing event
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AutoCompleteExtender.OnClientShown">
            <summary>
            A handler attached to the client-side shown event
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AutoCompleteExtender.OnClientHiding">
            <summary>
            A handler attached to the client-side hiding event
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AutoCompleteExtender.OnClientHidden">
            <summary>
            A handler attached to the client-side hidden event
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AutoCompleteExtender.OnClientItemSelected">
            <summary>
            A handler attached to the client-side itemSelected event
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AutoCompleteExtender.OnClientItemOver">
            <summary>
            A handler attached to the client-side itemOver event
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.AutoCompleteExtender.OnClientItemOut">
            <summary>
            A handler attached to the client-side itemOut event
            </summary>
        </member>
        <member name="M:AjaxControlToolkit.AutoCompleteExtender.CreateAutoCompleteItem(System.String,System.String)">
            <summary>
            Creates a serialized JSON object representing a text/value pair that can
            be returned by the webservice
            </summary>
            <param name="text" type="String">Text part</param>
            <param name="value" type="String">Value part</param>
            <returns>Serialized JSON</returns>
        </member>
        <member name="T:AjaxControlToolkit.BalloonPopupExtender">
            <summary>
            The BalloonPopupExtender control displays a popup which can contain any content.    
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BalloonPopupExtender.ExtenderControlID">
            <summary>
            Extender control ID
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BalloonPopupExtender.BalloonPopupControlID">
            <summary>
            The ID of the control to display
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BalloonPopupExtender.Position">
            <summary>
            Optional setting specifying where the popup should be positioned relative to the target control
            </summary>
            <remarks>
            (TopRight, TopLeft, BottomRight, BottomLeft, Auto) Default value is Auto
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.BalloonPopupExtender.BalloonStyle">
            <summary>
            Optional setting specifying the theme of balloon popup.
            Default value is Rectangle
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BalloonPopupExtender.OffsetX">
            <summary>
            Optional X (horizontal) offset for the popup window (relative to the target control).
            Default value is 0
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BalloonPopupExtender.OffsetY">
            <summary>
            Optional Y (vertical) offset for the popup window (relative to the target control).
            Default value is 0
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BalloonPopupExtender.OnShow">
            <summary>
            The OnShow animation will be played each time the popup is displayed.
            The popup will be positioned correctly but hidden
            </summary>
            <remarks>
            The animation can use <HideAction Visible="true" /> to display the popup along with any other visual effects
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.BalloonPopupExtender.OnHide">
            <summary>
            The OnHide animation will be played each time the popup is hidden
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BalloonPopupExtender.DisplayOnMouseOver">
            <summary>
            Optional setting specifying whether to display balloon popup on the client onMouseOver event. Default value is false
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BalloonPopupExtender.DisplayOnFocus">
            <summary>
            Optional setting specifying whether to display balloon popup on the client onFocus event. Default value is false
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BalloonPopupExtender.DisplayOnClick">
            <summary>
            Optional setting specifying whether to display balloon popup on the client onClick event. Default value is true
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BalloonPopupExtender.BalloonSize">
            <summary>
            Optional setting specifying the size of balloon popup. (Small, Medium and Large). Default value is Small
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BalloonPopupExtender.UseShadow">
            <summary>
            Optional setting specifying whether to display shadow of balloon popup or not
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BalloonPopupExtender.CustomCssUrl">
            <summary>
            This is required if user choose BalloonStyle to Custom. This specifies the url of custom css which will display custom theme
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BalloonPopupExtender.ScrollBars">
            <summary>
            Optional setting specifying whether to display scrollbar if contents are overflowing.
            Default value is Auto
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.BalloonPopupExtender.CustomClassName">
            <summary>
            This is required if user choose BalloonStyle to Custom. This specifies the name of the css class for the custom theme
            </summary>
        </member>
        <member name="M:AjaxControlToolkit.Bundling.BundleResolver.GetControlTypesInBundles(System.String[],System.String)">
            Get all types of controls referenced by control bundle names. 
            If control bundle names is empty then default control bundle defined in AjaxControlToolkit.config will be use to retrieved control types.
            If AjaxControlToolkit.config file is not found then all standard control types of AjaxControlToolkit will be retrieved and if control bundle names is defined exception will thrown.
        </member>
        <member name="T:AjaxControlToolkit.CalendarExtender">
            <summary>
            The Calendar control extender can be attached to any ASP.NET TextBox control. 
            It provides client-side date-picking functionality with a customizable date format and UI in a popup control.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CalendarExtender.CssClass">
            <summary>
            The name of the Cascading Style Sheet class used to style the calendar.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CalendarExtender.Format">
            <summary>
            A format string used to display the selected date.
            The default value is d
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CalendarExtender.TodaysDateFormat">
            <summary>
            A format string used to display today's date. 
            The default value is MMMM d, yyyy.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CalendarExtender.DaysModeTitleFormat">
            <summary>
            A format string used to display the Days Mode Title.
            The default value is MMMM, yyyy.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CalendarExtender.ClearTime">
            <summary>
            Sets whether or not time should be cleared in edited date/time.
            The default value is false
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CalendarExtender.EnabledOnClient">
            <summary>
            Sets whether or not this behavior is available for the current element.
            The default value is true
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CalendarExtender.Animated">
            <summary>
            Sets whether or not changing modes is animated.
            The default value is true
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CalendarExtender.FirstDayOfWeek">
            <summary>
            The first day of the week. 
            The default value is Default
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CalendarExtender.PopupButtonID">
            <summary>
            The ID of a control to show the calendar popup when clicked. If this value is not
            set, the calendar will pop up when the textbox receives focus.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CalendarExtender.PopupPosition">
            <summary>
            The popup position of the calendar. The default value is BottomLeft.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CalendarExtender.SelectedDate">
            <summary>
            The date that the calendar is initialized with.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CalendarExtender.DefaultView">
            <summary>
            The default view of the calender. The default value is Days.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CalendarExtender.OnClientShowing">
            <summary>
            A client script that is executed immediately before the calendar is displayed.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CalendarExtender.OnClientShown">
            <summary>
            A client script that is executed immediately after the calendar is displayed.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CalendarExtender.OnClientHiding">
            <summary>
            A client script that is executed immediately before the calendar is hidden.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CalendarExtender.OnClientHidden">
            <summary>
            A client script that is executed immediately after the calendar is hidden.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CalendarExtender.OnClientDateSelectionChanged">
            <summary>
            A script that is executed when a new date is selected.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CalendarExtender.StartDate">
            <summary>
            The start date for a range.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CalendarExtender.EndDate">
            <summary>
            The end date for a range.
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.CascadingDropDown">
            <summary>
            CascadingDropDown is an ASP.NET AJAX extender that can be attached to an ASP.NET
            DropDownList control to get automatic population of a set of DropDownList controls.
            Each time selection of one DropDownList control changes, CascadingDropDown makes a call 
            to a specified web service to retrieve the list of values for the next DropDownList in the set.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CascadingDropDown.ParentControlID">
            <summary>
            An optional ID of the parent DropDownList (on which the content of this control is based).
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CascadingDropDown.Category">
            <summary>
            A category of this DropDownList (used when communicating with the helper web service).
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CascadingDropDown.PromptText">
            <summary>
            Optional text displayed by DropDownList a user has not yet touched. If omitted, the first dropdown item is selected.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CascadingDropDown.PromptValue">
            <summary>
            An optional value for an option displayed by DropDownList showing PromptText.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CascadingDropDown.EmptyText">
            <summary>
            Optional text for an option displayed when the list is empty.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CascadingDropDown.EmptyValue">
            <summary>
            An optional value for an option displayed when the list is empty.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CascadingDropDown.LoadingText">
            <summary>
            Optional text displayed by DropDownList when it is loading its data.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CascadingDropDown.SelectedValue">
            <summary>
            A selected value of the dropdown.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CascadingDropDown.ServicePath">
            <summary>
            A path to the helper web service.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CascadingDropDown.ServiceMethod">
            <summary>
            The name of a web service method.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CascadingDropDown.ContextKey">
            <summary>
            User/page specific context provided to an optional overload of the web method described by ServiceMethod/ServicePath.
            If the context key is used, it should have the same signature with an additional parameter named contextKey of the sting type.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CascadingDropDown.UseContextKey">
            <summary>
            Determines whether or not the ContextKey property should be used. 
            It will be automatically enabled if the ContextKey property is ever set (either on the client or server side). 
            If the context key is used, it should have the same signature with an additional parameter named contextKey of the string type.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CascadingDropDown.UseHttpGet">
            <summary>
            Determines whether or not to use the HTTP GET method for requesting data.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CascadingDropDown.EnableAtLoading">
            <summary>
            Determines wether or not to disable the DropDownList control when it is waiting for data from the service,
            so on loading a user can use the keyboard to navigate to the drop-down control.
            </summary>
        </member>
        <member name="M:AjaxControlToolkit.CascadingDropDown.ParseKnownCategoryValuesString(System.String)">
            <summary>
            A helper method to parse the private storage format used to communicate with known category/value pairs.
            </summary>
            <param name="knownCategoryValues">Private storage format string</param>
            <returns>Dictionary of category/value pairs</returns>
        </member>
        <member name="M:AjaxControlToolkit.CascadingDropDown.QuerySimpleCascadingDropDownDocument(System.Xml.XmlDocument,System.String[],System.Collections.Specialized.StringDictionary,System.String)">
            <summary>
            A helper method to provide simple implementation of a method to query a data set and return relevant dropdown content.
            </summary>
            <param name="document">XML document containing the data set</param>
            <param name="documentHierarchy">List of strings representing the hierarchy of the data set</param>
            <param name="knownCategoryValuesDictionary">Known category/value pairs</param>
            <param name="category">Category for which the drop down contents are desired</param>
            <returns>Contents of the specified drop down subject to the choices already made</returns>
        </member>
        <member name="M:AjaxControlToolkit.CascadingDropDown.QuerySimpleCascadingDropDownDocument(System.Xml.XmlDocument,System.String[],System.Collections.Specialized.StringDictionary,System.String,System.Text.RegularExpressions.Regex)">
            <summary>
            A helper method to provide simple implementation of a method to query a data set and return relevant dropdown content.
            </summary>
            <param name="document">XML document containing the data set</param>
            <param name="documentHierarchy">List of strings representing the hierarchy of the data set</param>
            <param name="knownCategoryValuesDictionary">Known category/value pairs</param>
            <param name="category">Category for which the drop down contents are desired</param>
            <param name="inputValidationRegex">Regular expression used to validate user input to the web service (to prevent XPath injection attacks)</param>
            <returns>Contents of the specified drop down subject to the choices already made</returns>
        </member>
        <member name="T:AjaxControlToolkit.CollapsiblePanelExtender">
            <summary>
            An extender class which adds collapse/expand behavior to an ASP.NET Panel control.
            The panel that is extended can then be collapsed or expanded by the user of the page, which is handy
            for doing things like showing or hiding content or maximizing available space.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CollapsiblePanelExtender.CollapseControlID">
            <summary>
            The server ID of the control to initiate the collapse of the target panel. The panel will
            collapse when this control fires its client side "onclick" event
            </summary>
            <remarks>
            If this value is the same as the value for "ExpandControlID", the CollapsiblePanel will
            toggle when this control is clicked
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.CollapsiblePanelExtender.ExpandControlID">
            <summary>
            The server ID of the control to initiate the expansion of the target panel.  The panel will
            opening when this control fires its client side "onclick" event
            </summary>
            <remarks>
            If this value is the same as the value for "CollapseControlID", the CollapsiblePanel will
            toggle when this control is clicked
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.CollapsiblePanelExtender.AutoCollapse">
            <summary>
            If true, and the panel is in its 'expanded' state, the panel will
            automatically collapse when the mouse pointer moves off of the panel.
            The default is false
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CollapsiblePanelExtender.AutoExpand">
            <summary>
            If true, and the panel is in its 'collapsed' state, the panel will
            automatically expand when the mouse pointer moves into the panel.
            The default is false
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CollapsiblePanelExtender.CollapsedSize">
            <summary>
            The size of the panel when it is in it's collapsed state.  To avoid flicker when your page
            initializes, set the initial height (or width) of your Panel control to match this value, and set the Collapsed property
            to 'true'
            </summary>
            <remarks>
            The default value is -1, which indicates that the CollapsiblePanel should initialize the CollapsedSize based on the
            initial size of the object
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.CollapsiblePanelExtender.ExpandedSize">
            <summary>
            The size of the panel when it is in it's opened state.  To avoid flicker when your page
            initializes, set the initial width of your Panel control to match this value, and set the Collapsed property
            to 'false'
            </summary>
            <remarks>
            The default value is -1, which indicates that the CollapsiblePanel should initialize the ExpandedSize based on the
            parent div offsetheight if aligned vertically and parentdiv offsetwidth if aligned horizonatally    
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.CollapsiblePanelExtender.ScrollContents">
            <summary>
            Determines whether the contents of the panel should be scrolled or clipped if they do not fit into
            the expanded size.
            The default is false
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CollapsiblePanelExtender.SuppressPostBack">
            <summary>
            Determines whether the CollapsiblePanelBehavior should suppress the click operations of the controls
            referenced in CollapseControlID and/or ExpandControlID. 
            </summary>
            <remarks>
            By default, this value is false, except for anchor ("A") tags
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.CollapsiblePanelExtender.Collapsed">
            <summary>
            Signals the initial collapsed state of the control.  Note this will not cause
            an expanded control to collapse at initialization, but rather tells the extender
            what the initial state of the Panel control is.
            The default is false
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CollapsiblePanelExtender.CollapsedText">
            <summary>
            The text to display in the collapsed state.  When the panel is collapsed,
            the internal contents (anything between the start and ending tags) of the control referenced by
            the TextLabelID property will be replaced with this text.  This collapsed text is also used
            as the alternate text of the image if ImageControlID is set
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CollapsiblePanelExtender.ExpandedText">
            <summary>
            The text to display in the expanded state.  When the panel is expanded,
            the internal contents (anything between the start and ending tags) of the control referenced by
            the TextLabelID property will be replaced with this text.  This expanded text is also used
            as the alternate text of the image if ImageControlID is set
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CollapsiblePanelExtender.TextLabelID">
            <summary>
            The ID of a label control to display the current state of the Panel.  When the collapsed state of the 
            panel changes, the entire HTML contents (anything between the start and ending tags of the label) will be replaced
            with the status text
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CollapsiblePanelExtender.ExpandedImage">
            <summary>
            Image to be displayed when the Panel is expanded and the ImageControlID is set
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CollapsiblePanelExtender.CollapsedImage">
            <summary>
            Image to be displayed when the Panel is collapsed and the ImageControlID is set
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CollapsiblePanelExtender.ImageControlID">
            <summary>
            The ID of an image control to display the current state of the Panel.  When the collapsed state of the 
            panel changes, the image source will be changed from the ExpandedImage to the CollapsedImage.  We also
            use the ExpandedText and CollapsedText as the image's alternate text if they are provided
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.CollapsiblePanelExtender.ExpandDirection">
            <summary>
            The dimension to use for collapsing and expanding - vertical or horizontal
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.ColorPickerExtender">
            <summary>
            The ColorPicker extender allows you to display a popup color picker when focus is moved to an input element.
            You can attach the ColorPicker extender to any ASP.NET TextBox control.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ColorPickerExtender.EnabledOnClient">
            <summary>
            Specifies whether or not ColorPicker behavior is available for the current element.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ColorPickerExtender.PopupButtonID">
            <summary>
             The ID of a control to use to display the color-picker popup.
            </summary>
            <remarks>
            If this value is not set, the color picker will pop up when the TextBox control represented by TargetControlID receives focus.
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.ColorPickerExtender.SampleControlID">
            <summary>
            The ID of a control to use to display the selected color.
            </summary>
            <remarks>
            If this value is set and the color picker popup is open, the background color of the specified control displays a color over which that the mouse pointer is hovering.
            If this value is not set, the selected color is not displayed.
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.ColorPickerExtender.PopupPosition">
            <summary>
            Indicates where the color picker popup should appear relative to the TextBox control that is being extended.
            </summary>
            <remarks>
            Values can be BottomLeft, BottomRight, TopLeft, TopRight, Left, or Right. The default is BottomLeft.
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.ColorPickerExtender.SelectedColor">
            <summary>
            A color value that the ColorPicker extender is initialized with.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ColorPickerExtender.OnClientShowing">
            <summary>
            A JavaScript function that will be called when the showing event is raised.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ColorPickerExtender.OnClientShown">
            <summary>
            A JavaScript function that will be called when the shown event is raised.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ColorPickerExtender.OnClientHiding">
            <summary>
            A JavaScript function that will be called when the hiding event is raised.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ColorPickerExtender.OnClientHidden">
            <summary>
            A JavaScript function that will be called when the hidden event is raised.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ColorPickerExtender.OnClientColorSelectionChanged">
            <summary>
            A JavaScript function that will be called when the colorSelectionChanged event is raised.
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.ComboBox">
            <summary>
            Like AutoCompleteExtender, a combo box is an ASP.NET AJAX control that combines the flexibility of the TextBox with a list of options from which users are able to choose.
            </summary>
        </member>
        <member name="M:AjaxControlToolkit.ComboBox.ResolveControl(System.String)">
            <summary>
            Resolves a control
            </summary>
            <param name="controlId">ID of the control</param>
            <returns>Found control</returns>
        </member>
        <member name="P:AjaxControlToolkit.ComboBox.RenderMode">
            <summary>
            Specifies whether or not the ComboBox is rendered as an Inline or Block level HTML element. The default is Inline.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ComboBox.DropDownStyle">
            <summary>
            Determines whether or not a user is allowed to enter text that does not match an item in the list and if the list is always displayed.
            </summary>
            <remarks>
            If "DropDownList" is specified, users are not allowed to enter text that does not match an item in the list. When "DropDown"
            (the default value) is specified, any text is allowed. If "Simple" is specified, any text is allowed and the list is
            always displayed regardless of the AutoCompleteMode property value.
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.ComboBox.AutoCompleteMode">
            <summary>
            Determines how the ComboBox automatically completes typed text.
            </summary>
            <remarks>
            When Suggest is specified, the ComboBox will show a list, highlight the first matched item, and if necessary, scroll the list to show the highlighted item. 
            If Append is specified, the ComboBox will append the remainder of the first matched item to the user-typed text and highlight the appended text. 
            When SuggestAppend is specified, both of the above behaviors are applied. 
            If None (the default value) is specified, the ComboBox' auto-complete behaviors are disabled.
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.ComboBox.ItemInsertLocation">
            <summary>
            Determines if to "Append" or "Prepend" new items when they are inserted into the list 
            or insert them in an "Ordinal" manner (alphabetically) based on the item Text or Value.
            The default is "Append"
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ComboBox.CaseSensitive">
            <summary>
            Specifies whether or not user-typed text matches items in the list in a case-sensitive manner. The default is false.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ComboBox.ListItemHoverCssClass">
            <summary>
            When specified, replaces default styles applied to highlighted items in the list with a custom css class.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ComboBox.SelectedIndex">
            <summary>
            The ComboBox selected item index.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ComboBox.AutoPostBack">
            <summary>
            Determines whether or not AutoPostBack should be used.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ComboBox.MaxLength">
            <summary>
            Specifies maximum length of the associated TextBox control.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ComboBox.TabIndex">
            <summary>
            The ComboBox tab index.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ComboBox.Enabled">
            <summary>
            Determines whether or not the ComboBox is enabled.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ComboBox.Height">
            <summary>
            ComboBox height.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ComboBox.Width">
            <summary>
            ComboBox width.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ComboBox.ForeColor">
            <summary>
            A foreground color.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ComboBox.BackColor">
            <summary>
            A background color.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ComboBox.Font">
            <summary>
            The ComboBox control font.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ComboBox.BorderColor">
            <summary>
            The ComboBox border color.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ComboBox.BorderStyle">
            <summary>
            The ComboBox border style.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ComboBox.BorderWidth">
            <summary>
            The ComboBox border width.
            </summary>
        </member>
        <member name="M:AjaxControlToolkit.ComboBox.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders a control.
            </summary>
            <param name="writer">HTML text writer</param>
        </member>
        <member name="M:AjaxControlToolkit.ComboBox.RaisePostDataChangedEvent">
            <summary>
            Raises PostDataChangeEvent.
            </summary>
        </member>
        <member name="E:AjaxControlToolkit.ComboBox.ItemInserting">
            <summary>
            Fires on inserting an item.
            </summary>
        </member>
        <member name="E:AjaxControlToolkit.ComboBox.ItemInserted">
            <summary>
            Fires when an item is inserted.
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.ConfirmButtonExtender">
            <summary>
            ConfirmButton is an extender that catches button clicks (or click on an instance of a type that is derived from Button) and displays a message to a user.
            If the user clicks OK, the button or link functions normally.
            If the user does not click OK, the click event is trapped and the button does not perform its default submit behavior.
            </summary>
        </member>
        <member name="M:AjaxControlToolkit.ConfirmButtonExtender.RegisterDisplayModalPopup">
            <summary>
            Registers the target of DisplayModalPopupID for use with ConfirmButton.
            </summary>
            <remarks>
            Called in OnLoad by default, but can be called later if the ModalPopup/ConfirmButton are created dynamically.
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.ConfirmButtonExtender.ConfirmText">
            <summary>
            Confirmation text to display.
            </summary>
            <remarks>
            HTML entities can be used for a newline character.
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.ConfirmButtonExtender.OnClientCancel">
            <summary>
            A client script to be executed when the Cancel button is clicked in the confirm dialog box.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ConfirmButtonExtender.ConfirmOnFormSubmit">
            <summary>
            True if the confirm dialog should run for form submission (i.e., after validators are all satisfied).
            The default is false
            </summary>
            <remarks>
            This is useful if a page contains ASP.NET validator controls and the confirm dialog box should be displayed only after all validation checks pass.
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.ConfirmButtonExtender.DisplayModalPopupID">
            <summary>
            Specifies an ID of a pre-configured ModalPopupExtender for use instead of window.confirm.
            </summary>
            <remarks>
            When you use the DisplayModalPopupID property, the following conditions must be met: 
            - The ModalPopup control must be configured with the same TargetControlID value as the ConfirmButton extender. (It will work properly if the ConfirmButton extender is disabled.) 
            - The ModalPopup control must specify the OkControlID or CancelControlID property to identify buttons that correspond to the OK and Cancel buttons in the confirm dialog box. 
            - The ModalPopup must not specify the OnOkScript or OnCancelScript property.        
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.ConfirmButtonExtender.PostBackScript">
            <summary>
            Specifies the script to run to initiate a postback.
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.DragPanelExtender">
            <summary>
             This extender attaches the stock floatingBehavior to the panel and is an example of wrapping the existing behavior with an extender. 
             On being attached to the panel, a user can then drag that panel around the browser rendering surface using the mouse.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.DragPanelExtender.DragHandleID">
            <summary>
            The server ID of a control that will serve as a handle for this drag operation. 
            When a user clicks and drags this control, the associated panel will be moved as well.
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.DropDownExtender">
            <summary>
            DropDown is an ASP.NET AJAX extender that can be attached almost to any ASP.NET control to provide a SharePoint-style drop-down menu.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.DropDownExtender.DropDownControlID">
            <summary>
            A ID of a control that will be displayed as a dropdown.	
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.DropDownExtender.HighlightBorderColor">
            <summary>
            Highlight border color.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.DropDownExtender.HighlightBackColor">
            <summary>
            Highlight background color.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.DropDownExtender.DropArrowBackColor">
            <summary>
            An arrow's background color.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.DropDownExtender.DropArrowImageUrl">
            <summary>
            An arrow's image URL.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.DropDownExtender.DropArrowWidth">
            <summary>
            Arrow width.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.DropDownExtender.OnClientPopup">
            <summary>
            The popup event
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.DropDownExtender.OnClientPopulating">
            <summary>
            The populating event
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.DropDownExtender.OnClientPopulated">
            <summary>
            The populated event
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.DropDownExtender.OnShow">
            <summary>
            OnShow animation will be played each time the dropdown is displayed.
            The dropdown will be positioned correctly but hidden.
            Animation can be used to display the dropdown with other visual effects.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.DropDownExtender.OnHide">
            <summary>
            OnHide animation will be played each time the dropdown is hidden.
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.DropShadowExtender">
            <summary>
            DropShadow is an extender that applies drop shadow to an ASP.NET Panel control.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.DropShadowExtender.Opacity">
            <summary>
            The opacity of the shadow, from 0 (transparent - no shadow rendered) to 1.0, which is fully opaque black.
            </summary>
            <remarks>
            The default is .5.
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.DropShadowExtender.Width">
            <summary>
            The shadow width on each side in pixels.
            </summary>
            <remarks>
            The default is 5.
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.DropShadowExtender.TrackPosition">
            <summary>
            Determines whether or not the DropShadow tracks position or size changes of the panel it is targeting.
            </summary>
            <remarks>
            This is false by default. If true, DropShadowBehavior uses a timer to
            poll for the position of its target, so don't turn it on unless it's needed.
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.DropShadowExtender.Rounded">
            <summary>
            A Boolean value that specifies whether or not corners of the target and drop shadow should be rounded.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.DropShadowExtender.Radius">
            <summary>
            Specifies the radius of rounded corners in pixels.
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.DynamicPopulateExtender">
            <summary>
            DynamicPopulate is an extender that replaces the control content with the result of the Web service or a page method call.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.DynamicPopulateExtender.ClearContentsDuringUpdate">
            <summary>
            Determines if HTML content of a target element should be cleared when the update begins.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.DynamicPopulateExtender.ContextKey">
            <summary>
            A key that you can pass to the Web service call, such as an ID. This is optional.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.DynamicPopulateExtender.PopulateTriggerControlID">
            <summary>
            A control's ID to trigger the target population. The population will be triggered by this control's Click event.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.DynamicPopulateExtender.ServiceMethod">
            <summary>
            A name of a Web service or page method to call
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.DynamicPopulateExtender.ServicePath">
            <summary>
            A path of the web service to call. If it is blank, a page method will be called instead.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.DynamicPopulateExtender.UpdatingCssClass">
            <summary>
            A CSS style to apply while the update is in progress
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.DynamicPopulateExtender.CustomScript">
            <summary>
            CustomScript can be used to evaluate a JavaScript function that will return a string to populate the control.
            This script method must return a string and will be called instead of the Service or Page method.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.DynamicPopulateExtender.CacheDynamicResults">
            <summary>
            Determines if the dynamic population result should be cached and not fetched again after the first load.
            The default is false
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.FilteredTextBoxExtender">
            <summary>
            FFilteredTextBox is an extender that either allows users to enter only characters 
            that you define into a text box or prevents users from entering specified characters.
            </summary>
            <remarks>
            Note that as the extender relies on JavaScript, you should never assume that data that is sent 
            to the server consists only of allowed characters.
            Always perform server-side validation check on data that is sent from the client.
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.FilteredTextBoxExtender.FilterType">
            <summary>
            A filter type to apply that is specified as a comma-separated combination 
            of the following values: Numbers, LowercaseLetters, UppercaseLetters, and Custom. 
            Custom is default.
            </summary>
            <remarks>
            If Custom is specified, the ValidChars property will be used in addition to other settings, such as Numbers.
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.FilteredTextBoxExtender.FilterMode">
            <summary>
            A filter mode to apply. Supported values are ValidChars and InvalidChars.
            If the property is set to InvalidChars, FilterType must be set to Custom.
            ValidChars is default.
            </summary>
            <remarks>
            If the property is set to ValidChars, FilterType must be set to Custom.
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.FilteredTextBoxExtender.ValidChars">
            <summary>
            A string that consists of all characters that are considered valid for the text box when the field type is Custom.
            </summary>
            <remarks>
            If the field type is not Custom, this property value is ignored.
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.FilteredTextBoxExtender.InvalidChars">
            <summary>
            A string that consists of all characters that are considered invalid for the text box when the field type is Custom.
            </summary>
            <remarks>
            If the field type is not Custom, this property value is ignored.
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.FilteredTextBoxExtender.FilterInterval">
            <summary>
            An integer that specifies an interval in milliseconds, in which the field's content is filtered.	
            </summary>
            <remarks>
            The default is 250
            </remarks>
        </member>
        <member name="T:AjaxControlToolkit.Gravatar">
            <summary>
            The Gravatar control is an ASP.NET AJAX Control Toolkit control that enables you to use gravatar images on your web forms.
            Gravatar is a Globally Recognized Avatar provided by Gravatar.com. 
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Gravatar.Email">
            <summary>
            An email that is associated with an account at Gravatar.com.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Gravatar.Size">
            <summary>
            The requested size of an image that the gravatar needs to render (both width and height).
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Gravatar.DefaultImage">
            <summary>
             An image Url that will be diplayed if a gravatar image can't be displayed because of inacceptable rating or an email account is not associated with the gravatar.
             It must be an absolute URL. 
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Gravatar.DefaultImageBehavior">
            <summary>
            An image displayed when the gravatar is not associated with an email account.
            Possible values are Identicon, MonsterId, MysteryMan, Retro, Wavatar. 
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Gravatar.Rating">
            <summary>
             Acceptable rating of an image to display.
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.HoverMenuExtender">
            <summary>
            HoverMenu is an ASP.NET AJAX Control Toolkit extender that can be attached to any 
            ASP.NET WebControl and associates that control with a popup panel to display additional content.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.HoverMenuExtender.PopupControlID">
            <summary>
            A control's ID to display when the mouse is over the target control. 
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.HoverMenuExtender.HoverCssClass">
            <summary>
            A CSS class to apply to the target when the hover menu popup is visible
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:AjaxControlToolkit.HoverMenuExtender.OffsetX" -->
        <member name="P:AjaxControlToolkit.HoverMenuExtender.OffsetY">
            <summary>
            The number of pixels to offset the popup from its default position as specified by PopupPosition. Default is 0 
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.HoverMenuExtender.PopDelay">
            <summary>
             Time in milliseconds for the popup to remain visible after the mouse moves away from the target control. 
            </summary>
            <remarks>
            Default is 0.
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.HoverMenuExtender.HoverDelay">
            <summary>
            Time in milliseconds before the popup is displayed after hovering over the target control. 
            </summary>
            <remarks>
            Default is 0.
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.HoverMenuExtender.PopupPosition">
            <summary>
            The popup element position when it is shown. 
            </summary>
            <remarks>
            This can be any value from the HoverMenuPopupPosition enumeration, 
            and the position can be modified by setting the OffsetX and/or OffsetY properties. 
            Can be Left, Right, Top, Bottom, Center. Center is default. 
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.HoverMenuExtender.OnShow">
            <summary>
            OnShow animation will be played each time the hover menu is displayed. 
            </summary>
            <remarks>
             The hover menu will be positioned correctly but hidden. Animation can be used to display the hover menu with other visual effects.
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.HoverMenuExtender.OnHide">
            <summary>
            OnHide animation will be played each time the hover menu is hidden. 
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.HtmlEditorExtender">
            <summary>
             HtmlEditorExtender extends to a textbox and creates and renders an editable
             div instead of a targeted textbox
             </summary>
        </member>
        <member name="P:AjaxControlToolkit.HtmlEditorExtender.ToolbarButtons">
            <summary>
             Provides a button list to the client side. The Toolbar property is required for designer experience support,
             because the editor always prevents the property's capability to provide values to the client side as
             ExtenderControlProperty at runtime
             </summary>
        </member>
        <member name="P:AjaxControlToolkit.HtmlEditorExtender.Toolbar">
            <summary>
             A Helper property to cacth buttons from modifed buttons at design time.
             This property will be attached only when the Toolbar property is not empty at design time
             </summary>
        </member>
        <member name="P:AjaxControlToolkit.HtmlEditorExtender.DisplaySourceTab">
            <summary>
             Determines whether or not to display a source view tab/button to see the source view of HtmlEditorExtender
             </summary>
        </member>
        <member name="P:AjaxControlToolkit.HtmlEditorExtender.OnClientChange">
            <summary>
            The name of a JavaScript function to attach to the client-side Change event
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.HtmlEditorExtender.AjaxFileUpload">
            <summary>
            AjaxFileUpload that is used to upload images
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.HtmlEditorExtender.EnableSanitization">
            <summary>
            Determines whether or not to use HTML-sanitization before data transfer to the server
            </summary>
        </member>
        <member name="E:AjaxControlToolkit.HtmlEditorExtender.ImageUploadComplete">
            <summary>
             An event handler to complete the Ajax Image upload
             </summary>
        </member>
        <member name="M:AjaxControlToolkit.HtmlEditorExtender.Decode(System.String)">
            <summary>
             Decodes html tags that are not generated by an htmlEditorExtender button
             </summary>
        </member>
        <member name="T:AjaxControlToolkit.LineChart">
            <summary>
            The LineChart control enables you to render a line chart from one or more series of values.
            This control is compatible with any browser that supports SVG including Internet Explorer 9
            and above. This control can display two types of LineCharts: Basic and Stacked.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.LineChart.DisplayValues">
            <summary>
            Whether or not show series values.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.LineChart.CategoriesAxis">
            <summary>
            Provides a set of values for the category axis to create a line chart
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.LineChart.ClientSeries">
            <summary>
            Provides a list of series to the client side
            </summary>
            <remarks>
            The Series property is required for designer experience support because the editor
            always prevents the property's capability to provide values to the client side
            as ExtenderControlProperty at runtime
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.LineChart.Series">
            <summary>
            Provides a list of series
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.LineChart.ChartType">
            <summary>
            Enables you to render two types of line charts: Basic or Stacked
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.LineChart.ValueAxisLines">
            <summary>
            Enables you to set interval size for a value axis line
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.LineChart.ValueAxisLineColor">
            <summary>
            Enables you to set a color of a value axis line
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.LineChart.CategoryAxisLineColor">
            <summary>
            Enables you to set the color of the category axis lines
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.LineChart.BaseLineColor">
            <summary>
            Enables you to set the color of the chart's base lines
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.LineChart.TooltipBackgroundColor">
            <summary>
            Enables you to set a background color of the tooltip box
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.LineChart.TooltipFontColor">
            <summary>
            Enables you to set a font color of the tooltip box
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.LineChart.TooltipBorderColor">
            <summary>
            Enables you to set a border color of the tooltip box
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.LineChart.AreaDataLabel">
            <summary>
            Enables you to set text/label that will be shown in the tooltip
            and describe an area data value
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.LineChartSeries.Name">
            <summary>
            The name of the LineChart series
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.LineChartSeries.LineColor">
            <summary>
            Enables you to set a line color for a particular series
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.LineChartSeries.Data">
            <summary>
            Provides data for a particular series
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.ListSearchExtender">
            <summary>
            ListSearchExtender lets you search for items in the ListBox or DropDownList by typing.
            The extender performs an incremental search within the ListBox based on what has been typed
            so far. The prompt message that is displayed when you click the list can be customized along
            with its CSS class and position.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ListSearchExtender.PromptText">
            <summary>
            A message to display when the ListBox or DropDownList receives focus
            </summary>
            <remarks>
            The default value is 'Type to search'. The PromptText is replaced by the search text typed by a user
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.ListSearchExtender.PromptCssClass">
            <summary>
            The name of a CSS class to apply to the prompt message
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ListSearchExtender.PromptPosition">
            <summary>
            Indicates whether the message should appear at the Top or Bottom of the ListBox.
            The default is Top
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ListSearchExtender.OnShow">
            <summary>
            OnShow animation will be played each time the extender's prompt is displayed
            </summary>
            <remarks>
            The prompt will be positioned correctly but hidden. Animation can be used to
            display the prompt with other visual effects
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.ListSearchExtender.OnHide">
            <summary>
            OnHide animation will be played each time the extender's prompt is hidden
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ListSearchExtender.QueryTimeout">
            <summary>
            Indicates whether a search query should be reset after the timeout if no match is found.
            The default is 0 meaning no auto reset behavior
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ListSearchExtender.QueryPattern">
            <summary>
            Indicates how typed characters should be used in the search query
            </summary>
            <remarks>
            The default pattern queries for results that start with the typed word
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.ListSearchExtender.IsSorted">
            <summary>
            Indicates if items added to the List are expected to be sorted
            </summary>
            <remarks>
            The default value is false. If it is set to true, it allows code to perform
            a faster search instead of performing the same operation before the search
            </remarks>
        </member>
        <member name="T:AjaxControlToolkit.MaskedEditExtender">
            <summary>
            MaskedEdit is an ASP.NET AJAX extender that attaches to the TextBox control to restrict what text that
            can be entered. MaskedEdit applies a mask to the input that permits only certain types of characters/text
            to be entered. The supported data formats are: Number, Date, Time, and DateTime.
            </summary>
            <remarks>
            MaskedEdit uses culture settings specified in the CultureName property. If none of these settings is specified,
            the culture setting will be the same as the page: English (United States).
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditExtender.Mask">
            <summary>
            A mask to be applied to the target TextBox
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditExtender.ClipboardText">
            <summary>
            Prompt text to use when the clipboard paste is performed
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditExtender.MaskType">
            <summary>
            A type of validation to perform
            </summary>
            <remarks>
            Possible values:
            None - No validation
            Number - Number validation
            Date - Date validation
            Time - Time validation
            DateTime - Date and time validation
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditExtender.MessageValidatorTip">
            <summary>
            A message displayed when editing in the TextBox
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditExtender.ErrorTooltipEnabled">
            <summary>
            Set to True to show a tooltip message when the mouse hovers over an invalid TextBox
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditExtender.ErrorTooltipCssClass">
            <summary>
            A CSS class for the tooltip message
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditExtender.ClipboardEnabled">
            <summary>
            Set to True to allow the copy/paste operation with the clipboard
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditExtender.AutoComplete">
            <summary>
            Set to True to automatically fill in empty mask characters not specified by a user
            </summary>
            <remarks>
            MaskType=Number - Empty mask characters will be filled with zeros
            MaskType=Time - Empty mask characters will be filled with the current time
            MaskType=Date - Empty mask characters will be filled with the current date
            MaskType=DateTime - Empty mask characters will be filled with the current date/time
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditExtender.ClearTextOnInvalid">
            <summary>
            Set to True to clear the TextBox when invalid text is entered
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditExtender.AutoCompleteValue">
            <summary>
            A Default character to use when AutoComplete is enabled
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditExtender.Filtered">
            <summary>
             Valid characters for mask type C (case-sensitive)
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditExtender.InputDirection">
            <summary>
            Text input direction
            </summary>
            <remarks>
            Possible values:
            LeftToRight - Left to Right
            RightToLeft - Right to left
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditExtender.PromptCharacter">
            <summary>
            Prompt character
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditExtender.OnFocusCssClass">
            <summary>
            A CSS class used when the TextBox receives focus
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditExtender.OnInvalidCssClass">
            <summary>
            A CSS class used when the text is not valid
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditExtender.UserDateFormat">
            <summary>
            A custom date format
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditExtender.UserTimeFormat">
            <summary>
            A custom time format
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditExtender.ClearMaskOnLostFocus">
            <summary>
            Set to True to remove a mask when the TextBox loses focus
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditExtender.CultureName">
            <summary>
            The name of a culture to use (overrides the default page culture)
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditExtender.CultureDatePlaceholder">
            <summary>
            Culture override
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditExtender.CultureTimePlaceholder">
            <summary>
            Culture override
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditExtender.CultureDecimalPlaceholder">
            <summary>
            Culture override
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditExtender.CultureThousandsPlaceholder">
            <summary>
            Culture override
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditExtender.CultureDateFormat">
            <summary>
            Culture override
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditExtender.CultureCurrencySymbolPlaceholder">
            <summary>
            Culture override
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditExtender.CultureAMPMPlaceholder">
            <summary>
            Culture override
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditExtender.AcceptAMPM">
            <summary>
            Determines whether or not AM/PM is accepted on time. The default value is false
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditExtender.AcceptNegative">
            <summary>
            Set to True if the negative sign (-) is allowed
            </summary>
            <remarks>
            Possible values:
            None - Do not show the negative sign
            Left- Show the negative sign on the left of the mask
            Right - Show the negative sign on the right of the mask
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditExtender.OnFocusCssNegative">
            <summary>
            A CSS class used when the TextBox gets focus with a negative value
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditExtender.OnBlurCssNegative">
            <summary>
            A CSS class used when the TextBox loses focus with a negative value
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditExtender.DisplayMoney">
            <summary>
            Specifies how the currency symbol is displayed
            </summary>
            <remarks>
            Possible values:
            None - Do not show the currency symbol
            Left - Show the currency symbol on the left of the mask
            Right - Show the currency symbol on the right of the mask
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditExtender.Century">
            <summary>
            A default century used when a date mask only has two digits for the year
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.MaskedEditValidator">
            <summary>
            MaskedEditValidator is a custom validator that attaches to the MaskedEdit extender and associates
            the TextBox and verifies that the input text matches the pattern specified in the MaskedEdit extender.
            Once associated with a validation group, server- and client-side validation can be performed and used
            to display messages.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditValidator.IsValidEmpty">
            <summary>
            Set to True if the TextBox can be empty
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditValidator.TooltipMessage">
            <summary>
            A message displayed when the TextBox has focus with an empty value
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditValidator.EmptyValueMessage">
            <summary>
            A message displayed when test is empty and the TextBox has focus
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditValidator.EmptyValueBlurredText">
            <summary>
            A message displayed when text is empty and the TextBox does not have focus
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditValidator.InvalidValueMessage">
            <summary>
            A message displayed when text is invalid and the TextBox has focus
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditValidator.InvalidValueBlurredMessage">
            <summary>
            A message displayed when text is invalid and the TextBox does not have focus
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditValidator.MaximumValue">
            <summary>
            A maximum value of the input
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditValidator.MaximumValueMessage">
            <summary>
            A message displayed when the maximum value is exceeded and the TextBox has focus
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditValidator.MaximumValueBlurredMessage">
            <summary>
            A message displayed when the maximum value is exceeded and the TextBox does not have focus
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditValidator.ClientValidationFunction">
            <summary>
            A client script used for custom validation
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditValidator.InitialValue">
            <summary>
            The initial value of the TextBox
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditValidator.ValidationExpression">
            <summary>
            A regular expression used to validate the input
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditValidator.MinimumValue">
            <summary>
            A minimum value of the input
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditValidator.MinimumValueMessage">
            <summary>
            A message displayed when the minimum value is exceeded and the TextBox has focus
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditValidator.MinimumValueBlurredText">
            <summary>
            A message displayed when the minimum value is exceeded and the TextBox does not have focus
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MaskedEditValidator.ControlExtender">
            <summary>
            ID of the MaskedEditExtender attached to the TextBox
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.ModalPopupExtender">
            <summary>
            The ModalPopup extender allows you to display content in an element that mimics a modal dialog box,
            which prevents a user from interacting with the rest of pages. The modal content can contain any
            hierarchy of controls. It is displayed above background (in z-order) that can have a custom style applied to it.
            
            Clicking OK or Cancel in the modal popup dismisses the content and optionally runs a custom script.
            The custom script is typically used to apply changes that were made in the modal popup. If a postback
            is required, you can allow the OK or Cancel control to perform a postback.
            
            By default, the modal content is centered on the page. However, you can set absolute positiniong and
            set only X or Y to center the content vertically or horizontally.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ModalPopupExtender.PopupControlID">
            <summary>
            ID of an element to display as a modal popup
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ModalPopupExtender.BackgroundCssClass">
            <summary>
            A CSS class to apply to the background when the modal popup is displayed
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ModalPopupExtender.OkControlID">
            <summary>
            ID of an element that dismisses the modal popup
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ModalPopupExtender.CancelControlID">
            <summary>
            ID of an element that cancels the modal popup
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ModalPopupExtender.OnOkScript">
            <summary>
            A script to run when the modal popup is dismissed using the element specified in OkControlID
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ModalPopupExtender.OnCancelScript">
            <summary>
            A script to run when the modal popup is dismissed using the element specified in CancelControlID
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ModalPopupExtender.X">
            <summary>
            The X coordinate of the top/left corner of the modal popup
            </summary>
            <remarks>
            If this value is not specified, the popup will be centered horizontally
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.ModalPopupExtender.Y">
            <summary>
            The Y coordinate of the top/left corner of the modal popup
            </summary>
            <remarks>
            If this value is not specified, the popup will be centered vertically
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.ModalPopupExtender.Drag">
            <summary>
            A Boolean value that specifies whether or not the modal popup can be dragged
            </summary>
            <remarks>
            This property is obsolete
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.ModalPopupExtender.PopupDragHandleControlID">
            <summary>
            ID of the embedded element that contains a popup header and title that will
            be used as a drag handle
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ModalPopupExtender.DropShadow">
            <summary>
            Set to True to automatically add a drop shadow to the modal popup
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ModalPopupExtender.RepositionMode">
            <summary>
            A value that determines if the popup must be repositioned when the window
            is resized or scrolled
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ModalPopupExtender.OnShown">
            <summary>
            Animation to perform once the modal popup is shown
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ModalPopupExtender.OnHidden">
            <summary>
            Animation to perform once the modal popup is hidden
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ModalPopupExtender.OnShowing">
            <summary>
            Animation to perform just before the modal popup is shown
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ModalPopupExtender.OnHiding">
            <summary>
            Animation to perform just before the modal popup is hidden.
            The popup closes only after animation completes
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.MultiHandleSliderExtender">
            <summary>
            The MultiHandleSlider extender provides a feature-rich extension to a regular asp:Textbox control.
            It allows you to choose a single value or multiple values in a range through a graphical slider
            interface. It supports one handle, dual handles, or any number of handles bound to values of the
            asp:TextBox or asp:Label controls. It also provides options for read-only access, custom graphic
            styling, hover and drag handle styles, as well as the mouse and keyboard support for accessibility.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MultiHandleSliderExtender.Minimum">
            <summary>
            The lowest value on the slider
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MultiHandleSliderExtender.Maximum">
            <summary>
            The highest value on the slider
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MultiHandleSliderExtender.Length">
            <summary>
            The slider rail length in pixels
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MultiHandleSliderExtender.Steps">
            <summary>
            Determines the number of discrete locations on the slider. Otherwise, the slider is continous
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MultiHandleSliderExtender.ShowInnerRail">
            <summary>
            Determines if the slider will show an inner selected range rail. Otherwise, it will be displayed as a uniform rail
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MultiHandleSliderExtender.InnerRailStyle">
            <summary>
            Determines how the inner rail style is handled
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MultiHandleSliderExtender.Orientation">
            <summary>
            Determines if the slider's orientation is horizontal or vertical
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MultiHandleSliderExtender.RaiseChangeOnlyOnMouseUp">
            <summary>
            Determines if changes events to the slider's values are raised during dragging.
            Otherwise, they are raised when dragging is completed
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MultiHandleSliderExtender.EnableInnerRangeDrag">
            <summary>
            Determines if the inner rail range can be dragged as a whole, moving both handles defining it
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MultiHandleSliderExtender.EnableRailClick">
            <summary>
            Determines if clicking the rail will detect and move the closest handle
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MultiHandleSliderExtender.IsReadOnly">
            <summary>
            Determines if the slider and its values can be manipulated
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MultiHandleSliderExtender.EnableKeyboard">
            <summary>
            Determines if the slider will respond to arrow keys when it has focus
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MultiHandleSliderExtender.EnableMouseWheel">
            <summary>
            Determines if the slider will respond to the mouse wheel when it has focus
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MultiHandleSliderExtender.Increment">
            <summary>
            Determines the number of slider points to increment or decrement using the
            keyboard or mouse wheel. It is ignored if the steps property is used
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MultiHandleSliderExtender.IsServerControl">
            <summary>
            Determines if a control is server-side
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MultiHandleSliderExtender.MultiHandleSliderTargets">
            <summary>
            The list of controls used to bind slider handle values. These should be Label or TextBox controls
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MultiHandleSliderExtender.EnableHandleAnimation">
            <summary>
            Determines if the slider handles display of an animation effect when the position is changed
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MultiHandleSliderExtender.ShowHandleHoverStyle">
            <summary>
            Determines if the slider handles will show a style effect when they are hovered over
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MultiHandleSliderExtender.ShowHandleDragStyle">
            <summary>
            Determines if the slider handles will show a style effect when they are being dragged
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MultiHandleSliderExtender.HandleAnimationDuration">
            <summary>
            Determines the total duration of an animation effect in seconds
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MultiHandleSliderExtender.TooltipText">
            <summary>
            Determines text to display as a tooltip; {0} denotes the current handle's value in the format string
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MultiHandleSliderExtender.CssClass">
            <summary>
            A master style to apply to slider graphical elements
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MultiHandleSliderExtender.OnClientLoad">
            <summary>
            An event raised when the slider is completely loaded on the page
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MultiHandleSliderExtender.OnClientDragStart">
            <summary>
            An event raised when a user initiates the drag operation on the slider
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MultiHandleSliderExtender.OnClientDrag">
            <summary>
            An event raised when a user drags the slider
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MultiHandleSliderExtender.OnClientDragEnd">
            <summary>
            An event raised when a user drops the slider
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MultiHandleSliderExtender.OnClientValueChanged">
            <summary>
            An event raised when the slider changes its state
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MultiHandleSliderExtender.BoundControlID">
            <summary>
            ID of a control to use for a single handle
            </summary>
            <remarks>
            Only used as a backward-compatibility feature for users that wish to upgrade
            their existing controls. The server control should be a TextBox or Label control
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.MultiHandleSliderExtender.Decimals">
            <summary>
            The number of decimal digits in a single slider's value
            </summary>
            <remarks>
            0 means an integer value. Only used as a backward-compatibility feature
            for users wishing to upgrade their existing controls
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.MultiHandleSliderExtender.HandleCssClass">
            <summary>
            A CSS class of a single handle
            </summary>
            <remarks>
             Only used as a backward-compatibility feature for users wishing to
            upgrade their existing controls
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.MultiHandleSliderExtender.RailCssClass">
            <summary>
            A CSS class for the slider's rail element
            </summary>
            <remarks>
            Only used as a backward-compatibility feature for users
            wishing to upgrade their existing controls
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.MultiHandleSliderExtender.HandleImageUrl">
            <summary>
            URL for an image to display in the slider's handle
            </summary>
            <remarks>
            Only used as a backward-compatibility feature for users wishing to
            upgrade their existing controls
            </remarks>
        </member>
        <member name="T:AjaxControlToolkit.MutuallyExclusiveCheckBoxExtender">
            <summary>
            MutuallyExclusiveCheckBox is an ASP.NET AJAX extender that can be attached to any ASP.NET CheckBox control.
            By adding a number of checkboxes to the same Key, only one check box with the specified key can be checked
            at a time. This extender is useful when a number of choices are available but only one can be chosen,
            similar to a radio button. The use of checkboxes however allows you to choose to uncheck a value,
            which is not possible normally with radio buttons. This also provides a more consistent and expected
            interface than using JavaScript to allow de-selection of a RadioButton item.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.MutuallyExclusiveCheckBoxExtender.Key">
            <summary>
            A unique key to use to associate check boxes
            </summary>
            <remarks>
            This key does not respect INamingContainer renaming
            </remarks>
        </member>
        <member name="T:AjaxControlToolkit.NoBot">
            <summary>
            NoBot is a control that prevents CAPTCHA-like bot/spam without user interactions. This approach is
            easier to bypass than the implementation that requires actual human intervention, but NoBot has the
            benefit of being completely invisible. NoBot is probably most relevant for low-traffic sites where
            blog/comment spam is a problem and 100% effectiveness is not required.
            </summary>
            <remarks>
            NoBot employs a few different anti-bot techniques:
            * Forcing the client's browser to perform a configurable JavaScript calculation and verifying the result
              as part of a postback. For example, the calculation may be simple numeric or may involve the DOM for
              added assurance that a browser is involved
            * Enforcing a configurable delay between a request sent to a form and the time it can be posted back.
              For example, a human is unlikely to complete a form in less than two seconds 
            * Enforcing a configurable limit to the number of acceptable requests for each IP address per unit of
              time. For example, a human is unlikely to submit the same form more than five times in a minute.
            
            NoBot can be tested by violating any of the above mentioned techniques: posting back quickly,
            posting back many times, or disabling JavaScript in the browser.
            </remarks>
        </member>
        <member name="M:AjaxControlToolkit.NoBot.IsValid(AjaxControlToolkit.NoBotState@)">
            <summary>
            Returns whether or not the user is valid
            </summary>
            <param name="state" type="NoBotState">NoBot state</param>
            <returns>Whether user is valid</returns>
        </member>
        <member name="M:AjaxControlToolkit.NoBot.IsValid">
            <summary>
            Returns whether or not the user is valid
            </summary>
            <returns>Whether user is valid</returns>
        </member>
        <member name="M:AjaxControlToolkit.NoBot.GetCopyOfUserAddressCache">
            <summary>
            Returns a copy of the user address cache
            </summary>
            <returns>Copy of the user address cache</returns>
        </member>
        <member name="M:AjaxControlToolkit.NoBot.EmptyUserAddressCache">
            <summary>
            Clears the user address cache
            </summary>
        </member>
        <member name="E:AjaxControlToolkit.NoBot.GenerateChallengeAndResponse">
            <summary>
            An optional EventHandler providing a custom implementation of the challenge/response code
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.NoBot.ResponseMinimumDelaySeconds">
            <summary>
            Optional minimum number of seconds before which a response (postback) is considered valid
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.NoBot.CutoffWindowSeconds">
            <summary>
            Optional number of seconds specifying the length of the cutoff window
            that tracks previous postbacks from each IP address
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.NoBot.CutoffMaximumInstances">
            <summary>
            Optional maximum number of postbacks to allow by a single IP address within the cutoff window
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.NumericUpDownExtender">
            <summary>
            NumericUpDown is an ASP.NET AJAX extender that can be attached to an ASP.NET TextBox control to
            add the up and down buttons that increment and decrement a value in the TextBox. The increment
            and decrement actions can be simple +1/-1 arithmetic, cycle through the provided list of values
            (like months of the year), or call a Web Service to determine the next value. Page authors can also
            provide custom images to be used instead of the default up/down button graphics.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.NumericUpDownExtender.TargetButtonUpID">
            <summary>
            A reference to a custom Up button
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.NumericUpDownExtender.TargetButtonDownID">
            <summary>
            A reference to a custom Down button
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.NumericUpDownExtender.ServiceUpPath">
            <summary>
            A path to a web service that returns data used to get the next value
            </summary>
            <remarks>
            This property should be left null if ServiceUpMethod or ServiceDownMethod
            references a page method. The Web service should be decorated with the
            System.Web.Script.Services.ScriptService attribute
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.NumericUpDownExtender.ServiceUpMethod">
            <summary>
            A Web service method that returns data used to get the next value or the name of
            a method declared on the page that is decorated with the WebMethodAttribute
            </summary>
            <remarks>
            The signature of this method must match the following:
            [System.Web.Services.WebMethod]
            [System.Web.Script.Services.ScriptMethod]
            public int NextValue(int current, string tag) { ... }
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.NumericUpDownExtender.ServiceDownPath">
            <summary>
            A path to a web service that returns data used to get the previous value
            </summary>
            <remarks>
            This property should be left null if ServiceUpMethod or ServiceDownMethod
            refers to a page method. The Web service should be decorated with the
            System.Web.Script.Services.ScriptService attribute
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.NumericUpDownExtender.ServiceDownMethod">
            <summary>
            A Web service method that returns data used to get the previous value or the name
            of a method declared on the page which is decorated with the WebMethodAttribute
            </summary>
            <remarks>
            The signature of this method must match the following:
            [System.Web.Services.WebMethod]
            [System.Web.Script.Services.ScriptMethod]
            public int NextValue(int current, string tag) { ... }
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.NumericUpDownExtender.Step">
            <summary>
            A step used for simple numeric incrementing and decrementing. The default value is 1
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.NumericUpDownExtender.Minimum">
            <summary>
            The minimum value allowed by the extender
            </summary>
            <remarks>
            Currently, it does not prevent out-of-range values from being entered into the textbox even
            if Minimum or Maximum values are specified on the extender, but the use of the up/down
            buttons should bring a value into the allowed range on a click
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.NumericUpDownExtender.Maximum">
            <summary>
            The maximum value allowed by the extender
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.NumericUpDownExtender.RefValues">
            <summary>
            A list of strings separated by semicolons (;) to be used as an enumeration by NumericUpDown
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.NumericUpDownExtender.Width">
            <summary>
            Combined size of the TextBox and Up/Down buttons. The minimum value 25
            </summary>
            <remarks>
            This property is not used if you provide custom buttons
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.NumericUpDownExtender.Tag">
            <summary>
            A custom parameter to pass to the Web Service
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.PagingBulletedListExtender">
            <summary>
            PagingBulletedList is an ASP.NET AJAX extender that can be attached to an ASP.NET BulletedList control
            and provide client-side sorted paging. It is very flexible and lets you specify either the number of
            characters used in the heading indices or the maximum number of items to display per index. If the
            input is not sorted (either on the server or client), it will generate more header indices but still function appropriately.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.PagingBulletedListExtender.IndexSize">
            <summary>
            The number of characters in index headings (ignored if MaxItemPerPage is set)
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.PagingBulletedListExtender.Height">
            <summary>
            Bulleted list height
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.PagingBulletedListExtender.Separator">
            <summary>
            Separator text to be placed between indices
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.PagingBulletedListExtender.MaxItemPerPage">
            <summary>
            Maximum number of items per page (ignores the IndexSize property)
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.PagingBulletedListExtender.ClientSort">
            <summary>
            Determines whether or not items should be sorted on the client side
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.PagingBulletedListExtender.SelectIndexCssClass">
            <summary>
            A CSS class for the selected index
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.PagingBulletedListExtender.UnselectIndexCssClass">
            <summary>
            A CSS class for indices that aren't selected
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.PasswordStrength">
            <summary>
            PasswordStrength is an ASP.NET AJAX extender that can be attached to an ASP.NET TextBox control used for the entry of passwords. 
            The PasswordStrength extender shows the strength of the password in the TextBox and updates itself as a user types the password.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.PasswordStrength.PreferredPasswordLength">
            <summary>
            Preferred length of the password
            </summary>
            <remarks>
            Passwords could be less than this amount but wont reach the 100% calculation
            if less than this count. This is used to calculate 50% of the percentage strength of the password
            Ideally, a password should be 20 characters in length to be a strong password.
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.PasswordStrength.MinimumNumericCharacters">
            <summary>
            Minimum number of numeric characters
            </summary>
            <remarks>
            If there are less than this property, then the password is not
            considered strong. If there are equal to or more than this value,
            then this will contribute 15% to the overall password strength percentage value.
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.PasswordStrength.HelpHandleCssClass">
            <summary>
            A CSS class applied to the help element used to display a dialog box describing password requirements
            </summary>
            <remarks>
            This is used so that the user can click on this image and get a display
            on what is required to make the password strong according to the current properties
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.PasswordStrength.HelpHandlePosition">
            <summary>
            Positioning of the help handle element relative to the target control
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.PasswordStrength.HelpStatusLabelID">
            <summary>
            Control ID of the label used to display help text
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.PasswordStrength.MinimumSymbolCharacters">
            <summary>
            Minimum number of symbol characters (ex. $ ^ *)
            </summary>
            <remarks>
            If there are less than this property, then the password is not considered strong.
            If there are equal to or more than this value, then this will contribute 15% to the overall
            password strength percentage value.
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.PasswordStrength.RequiresUpperAndLowerCaseCharacters">
            <summary>
            Specifies whether mixed case characters are required
            </summary>
            <remarks>
            Determines if mixed case passwords are required to be considered strong.
            If true, then there must be at least one occurrence of mixed case
            (upper and lower) letters in the password to be considered strong. If there is,
            this will contribute 20% to the overall password strength percentage value.
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.PasswordStrength.TextCssClass">
            <summary>
            CSS class applied to the text display when StrengthIndicatorType=Text
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.PasswordStrength.BarBorderCssClass">
            <summary>
            A CSS class applied to the bar indicator's border when StrengthIndicatorType=BarIndicator
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.PasswordStrength.BarIndicatorCssClass">
            <summary>
            A CSS class applied to the bar indicator's inner bar when StrengthIndicatorType=BarIndicator
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.PasswordStrength.PrefixText">
            <summary>
            Text prefixed to the display text when StrengthIndicatorType=Text
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.PasswordStrength.DisplayPosition">
            <summary>
            Positioning of the strength indicator relative to the target control
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.PasswordStrength.StrengthIndicatorType">
            <summary>
            Strength indicator type (Text or BarIndicator)
            </summary>
            <remarks>
            BarIndicator - progress bar indicating password strength
            Text - low, medium, high or excellent
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.PasswordStrength.CalculationWeightings">
            <summary>
            A list of semi-colon separated numeric values used to determine the weight of password strength's characteristic.
            </summary>
            <remarks>
            There must be 4 values specified which must total 100. 
            The default weighting values are defined as 50;15;15;20. 
            This corresponds to password length is 50% of the strength calculation, 
            Numeric criteria is 15% of strength calculation, casing criteria is 15% of calculation, 
            and symbol criteria is 20% of calculation. So the format is 'A;B;C;D' 
            where A = length weighting, B = numeric weighting, C = casing weighting, D = symbol weighting.
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.PasswordStrength.TextStrengthDescriptions">
            <summary>
            List of semi-colon separated descriptions used when StrengthIndicatorType=Text
            (Minimum of 2, maximum of 10; order is weakest to strongest)
            </summary>
            <remarks>
            Example: None;Weak;Medium;Strong;Excellent
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.PasswordStrength.StrengthStyles">
            <summary>
            List of semi-colon separated CSS classes that are used depending on the password's strength.
            </summary>
            <remarks>
            This property will override the BarIndicatorCssClass / TextIndicatorCssClass property if present.
            The BarIndicatorCssClass / TextIndicatorCssClass property differs in that it attributes one
            CSS style to the BarIndicator or Text Strength indicator (depending on which type is chosen)
            regardless of password strength. This property will cause the style to change based on the password
            strength and also to the number of styles specified in this property. For example, if 2 styles are
            defined like StrengthStyles="style1;style2" then style1 is applied when the password strength is less
            than 50%, and style2 is applied when password strength is >= 50%. This property can have up to 10 styles.
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.PasswordStrength.MinimumLowerCaseCharacters">
            <summary>
            A minimum number of lowercase characters required when requiring 
            mixed case characters as part of your password strength considerations
            </summary>
            <remarks>
            Only in effect if RequiresUpperAndLowerCaseCharacters property is true.
            The default value is 0 which means this property is not in effect and
            there is no minimum limit.
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.PasswordStrength.MinimumUpperCaseCharacters">
            <summary>
            Minimum number of uppercase characters required when requiring mixed case
            characters as part of your password strength considerations.
            </summary>
            <remarks>
            Only in effect if RequiresUpperAndLowerCaseCharacters property is true.
            The default value is 0 which means this property is not in effect and
            there is no minimum limit.
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.PasswordStrength.TextStrengthDescriptionStyles">
            <summary>
            A semi-colon delimited string that specifies the styles applicable to each
            string descriptions for the password strength when using a textual display
            </summary>
            <remarks>
            Deprecated. Use StrengthStyles instead
            </remarks>
        </member>
        <member name="T:AjaxControlToolkit.PieChart">
            <summary>
            The PieChart control enables you to render a pie chart from one or more PieChartValues.
            This control is compatible with any browser which supports SVG including Internet Explorer 9 and above.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.PieChart.PieChartClientValues">
            <summary>
            Provides the list of PieChartValues to the client side
            </summary>
            <remarks>
            Needs help from the PieChartValues property for designer experience support,
            because Editor always blocks the property's ability to provide values to
            the client side as ExtenderControlProperty does at runtime
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.PieChart.PieChartValues">
            <summary>
            A list of PieChartValues
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.PopupControlExtender">
            <summary>
            PopupControl is an ASP.NET AJAX extender that can be attached to any control to open a popup
            window that displays additional content. This popup window will probably be interactive and
            located within an ASP.NET AJAX UpdatePanel. So, it will perform complex server-based processing
            (including postbacks) without affecting the rest of the page. The popup window can contain any
            content including ASP.NET server controls, HTML elements, etc. Once work of the popup window is
            done, a simple server-side call dismisses it and triggers any relevant script on the client to
            run and update the page dynamically.
            </summary>
        </member>
        <member name="M:AjaxControlToolkit.PopupControlExtender.GetProxyForCurrentPopup(System.Web.UI.Page)">
            <summary>
            Returns a proxy PopupControlExtender representing the currently active popup on the specified page
            </summary>
            <remarks>
            Only the Cancel and Commit methods should be called on the proxy
            </remarks>
            <param name="page" type="Page">Page</param>
            <returns>Popup control extender</returns>
        </member>
        <member name="M:AjaxControlToolkit.PopupControlExtender.Cancel">
            <summary>
            Cancels the popup control and hides it abandoning results
            </summary>
        </member>
        <member name="M:AjaxControlToolkit.PopupControlExtender.Commit(System.String)">
            <summary>
            Commits the popup control and hides it applying the specified result
            </summary>
            <param name="result" type="String">Result</param>
        </member>
        <member name="P:AjaxControlToolkit.PopupControlExtender.ExtenderControlID">
            <summary>
            The ID of the extender control
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.PopupControlExtender.PopupControlID">
            <summary>
            The ID of the control to display
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.PopupControlExtender.CommitProperty">
            <summary>
            Optional setting specifying a property of the control being extended that
            should be set with the result of the popup
            </summary>
            <remarks>
            If the property value is missing (an empty line), the default "value" property will be used
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.PopupControlExtender.CommitScript">
            <summary>
            Optional setting specifying an additional script to run after the result of the popup is set
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.PopupControlExtender.Position">
            <summary>
            Optional setting specifying where the popup should be positioned relative to the target
            control (Left, Right, Top, Bottom, or Center)
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.PopupControlExtender.OffsetX">
            <summary>
            The number of pixels to offset the Popup from its default position, as specified by Position
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.PopupControlExtender.OffsetY">
            <summary>
            The number of pixels to offset the Popup from its default position, as specified by Position
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.PopupControlExtender.OnShow">
            <summary>
            OnShow animation will be played each time the popup is displayed. The
            popup will be positioned correctly but hidden. Animation can be used
            to display the popup with other visual effects
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.PopupControlExtender.OnHide">
            <summary>
            OnHide animation will be played each time the popup is hidden
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.Rating">
            <summary>
            The Rating control provides intuitive rating experience that allows users to select the number of stars that represents their rating
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Rating.AutoPostBack">
            <summary>
            Set to True to cause a postback on a rating item click
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Rating.CurrentRating">
            <summary>
            An Initial rating value
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Rating.MaxRating">
            <summary>
            Maximum rating value
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Rating.BehaviorID">
            <summary>
            ID of the behavior object
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Rating.ReadOnly">
            <summary>
            Whether or not the rating can be changed
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Rating.Tag">
            <summary>
            A custom parameter to pass to ClientCallBack
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Rating.StarCssClass">
            <summary>
            A CSS class for a visible star
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Rating.FilledStarCssClass">
            <summary>
            A CSS class for a star in filled mode
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Rating.EmptyStarCssClass">
            <summary>
            A CSS class for a star in empty mode
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Rating.WaitingStarCssClass">
            <summary>
            A CSS class for a star in waiting mode
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:AjaxControlToolkit.Rating.RatingAlign" -->
        <member name="P:AjaxControlToolkit.Rating.RatingDirection">
            <summary>
            Orientation of stars (LeftToRightTopToBottom or RightToLeftBottomToTop)
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Rating.ID">
            <summary>
            Rating control ID
            </summary>
        </member>
        <member name="E:AjaxControlToolkit.Rating.Changed">
            <summary>
            Fires when rating is changed
            </summary>
        </member>
        <member name="E:AjaxControlToolkit.Rating.Click">
            <summary>
            Fires when rating is set
            </summary>
        </member>
        <member name="M:AjaxControlToolkit.Rating.GetCallbackResult">
            <summary>
            Returns a callback result
            </summary>
            <returns>Callback result</returns>
        </member>
        <member name="M:AjaxControlToolkit.Rating.RaiseCallbackEvent(System.String)">
            <summary>
            Raises the callback event
            </summary>
            <param name="eventArgument" type="String">Event argument</param>
        </member>
        <member name="M:AjaxControlToolkit.Rating.RaisePostBackEvent(System.String)">
            <summary>
            Raises the postback event
            </summary>
            <param name="eventArgument" type="String">Event argument</param>
        </member>
        <member name="T:AjaxControlToolkit.RatingExtender">
            <summary>
            The Rating extender provides intuitive rating experience that allows users to select the
            number of stars that represents their rating. The page designer can specify the initial
            rating, the maximum rating to allow, the alignment and direction of stars, and custom
            styles for the different states a star can have. Rating also supports a ClientCallBack
            event that allows custom code to run after the user has rated something.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.RatingExtender.AutoPostBack">
            <summary>
            True to cause a postback on a rating item click
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.RatingExtender.Rating">
            <summary>
            A current rating value
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.RatingExtender.CallbackID">
            <summary>
            ID of the callback
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.RatingExtender.Tag">
            <summary>
            A custom parameter to pass to the ClientCallBack
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.RatingExtender.RatingDirection">
            <summary>
            Orientation of stars (LeftToRightTopToBottom or RightToLeftBottomToTop)
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.RatingExtender.MaxRating">
            <summary>
            A maximum rating value
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.RatingExtender.StarCssClass">
            <summary>
            A CSS class for a visible star
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.RatingExtender.ReadOnly">
            <summary>
            Whether or not the rating can be changed
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.RatingExtender.FilledStarCssClass">
            <summary>
            A CSS class for star in filled mode
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.RatingExtender.EmptyStarCssClass">
            <summary>
            A CSS class for a star in empty mode
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.RatingExtender.WaitingStarCssClass">
            <summary>
            A CSS class for a star in waiting mode
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.BulletedListItem">
            We create our own BulletedListItem control here (LI)
            because the ASP.NET BulletedList control exposes a collection of list items
            rather than a child collection of controls.
        </member>
        <member name="P:AjaxControlToolkit.DropWatcherExtender.DropLayoutElement">
            The element that will be shown as the "you can drop here" visual when an item is 
            being reordered.
        </member>
        <member name="T:AjaxControlToolkit.ReorderList">
            <summary>
            ReorderList is an ASP.NET AJAX control that implements a bulleted data-bound list with items that
            can be reordered interactively. To reorder items in the list, a user simply drags the item's control
            bar to its new location. Graphical feedback is shown where the item will be placed as it is dragged by
            the user. The data source is updated after the item is dropped in its new location. 
            </summary>
            <remarks>
            When bound to data, the ReorderList control will behave like many other databound controls. If data you are
            displaying has a field that determines sort order (e.g. the select query is sorted by this column), and
            that column is of an integer type, the ReorderList can automatically perform reorders if its SortOrderField
            property is set. ReorderList can also be bound to a data source that implements IList (such as Arrays).
            
            The ReorderList control is different than other samples because it is an ASP.NET server-side control that is
            aware of ASP.NET AJAX behavior. Rather than extending existing controls on a page, it delivers rich client-side
            experience directly and still has a traditional postback server model for interaction with an application.
            
            ReorderList can handle reorders in two ways either via a callback or postback. In the case of a callback, no
            page postback happens on reordering. This is useful if data is only to be ordered. If data items are to be
            deleted or edited, a full postback needs to occur to sync the server side-state with the client0side state.
            The PostbackOnReorder property enables this. 
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.ReorderList.AllowReorder">
            <summary>
            Determines whether or not to allow drag/drop reordering. It is automatically set to true if ReorderTemplate is present
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ReorderList.CallbackCssStyle">
            <summary>
            A callback CSS style
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ReorderList.DataKeyField">
            <summary>
            The primary key field for data
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ReorderList.DataKeys">
            <summary>
            The indexed collection of data keys (one key for each row when data is bound)
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ReorderList.DataSourceID">
            <summary>
            ID of the data source to use to populate this control
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ReorderList.DragHandleAlignment">
            <summary>
            Sets the drag handle relative to the item row (Top, Bottom, Left, or Right)
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ReorderList.DragHandleTemplate">
            <summary>
            A template for the drag handle that a user clicks and drags to reorder items
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ReorderList.EmptyListTemplate">
            <summary>
            A template to show when a list has no data. This item is not data-bindable
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ReorderList.EditItemIndex">
            <summary>
            An index of an item that is currently in Edit mode.
            The default value is -1, which means no item is in edit mode 
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ReorderList.EditItemTemplate">
            <summary>
            A template to display for a row that is in Edit mode
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ReorderList.ItemInsertLocation">
            <summary>
            Determines where new items are inserted into the list (Beginning or End)
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ReorderList.InsertItemTemplate">
            <summary>
            A template to show for adding new items to the list
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ReorderList.ItemTemplate">
            <summary>
            A template to display for items in the list
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ReorderList.Items">
            <summary>
            A collection of reodered list items
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ReorderList.LayoutType">
            <summary>
            The type of a layout to apply to items. If Table is selected, the DragHandleAlignment property
            is used to lay out items in relation to the drag handle. If not, items are simply wrapped in
            the Panel controls and can be positioned using CSS
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ReorderList.PostBackOnReorder">
            <summary>
            Determines whether or not to do a postback on reordering
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ReorderList.SortOrderField">
            <summary>
            The name of a column that controls the sort order of rows in the data base
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ReorderList.ReorderTemplate">
            <summary>
            A template to use as a visible drop element when a user is dragging an item.
            This template is not data-bindable
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ReorderList.ShowInsertItem">
            <summary>
            Determines whether or not the InsertItem is shown. If this value is
            not set and the InsertItemTemplate is set, the default value is set to true
            </summary>
        </member>
        <member name="M:AjaxControlToolkit.ReorderList.UpdateItem(System.Int32)">
            <summary>
            Updates the specified row with its current values
            </summary>
            <param name="rowIndex" type="Int">Row index</param>
        </member>
        <member name="M:AjaxControlToolkit.ReorderList.GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)">
            <summary>
            Returns style of the reorder list item
            </summary>
            <param name="itemType" type="ListItemType">Item type</param>
            <param name="repeatIndex" type="Int">Repeat index</param>
            <returns>Item style</returns>
        </member>
        <member name="P:AjaxControlToolkit.ReorderList.HasFooter">
            <summary>
            Determines whether or not the list has a footer
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ReorderList.HasHeader">
            <summary>
            Determines whether or not the list has a header
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ReorderList.HasSeparators">
            <summary>
            Determines whether or not the list has separators
            </summary>
        </member>
        <member name="M:AjaxControlToolkit.ReorderList.RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders an item
            </summary>
            <param name="itemType" type="ListItemType">Item type</param>
            <param name="repeatIndex" type="Int">Repeat index</param>
            <param name="repeatInfo" type="RepeatInfo">Repeat into</param>
            <param name="writer" type="HtmlTextWriter">Writer</param>
        </member>
        <member name="P:AjaxControlToolkit.ReorderList.RepeatedItemCount">
            <summary>
            Determines the count of repeated items
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.ResizableControlExtender">
            <summary>
            ResizableControl is an extender that is attached to any element on a web page and allows a
            user to resize that control with a handle attached to the lower-right corner of the control.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ResizableControlExtender.HandleCssClass">
            <summary>
            The name of the CSS class to apply to the resize handle
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ResizableControlExtender.ResizableCssClass">
            <summary>
            The name of the CSS class to apply to the element when resizing
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ResizableControlExtender.HandleOffsetX">
            <summary>
            X-Offset to apply to the location of the resize handle
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ResizableControlExtender.HandleOffsetY">
            <summary>
            Y-Offset to apply to the location of the resize handle
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ResizableControlExtender.MinimumWidth">
            <summary>
            Minimum width of the resizable element
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ResizableControlExtender.MinimumHeight">
            <summary>
            Minimum height of the resizable element
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ResizableControlExtender.MaximumWidth">
            <summary>
            Maximum width of the resizable element
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ResizableControlExtender.MaximumHeight">
            <summary>
            Maximum height of the resizable element
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ResizableControlExtender.OnClientResize">
            <summary>
            Fires when the element has been resized
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ResizableControlExtender.OnClientResizing">
            <summary>
            Fires on resizing the elemen
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ResizableControlExtender.OnClientResizeBegin">
            <summary>
            Fires when resizing the element starts
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ResizableControlExtender.Size">
            <summary>
            Size of the target
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.Seadragon">
            <summary>
            The SeaDragon control can be used for viewing images in an interactive manner.
            Use the mouse to pan and zoom around an image.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Seadragon.AnimationTime">
            <summary>
            The amount of time in seconds during which animations should last. Default is 1.5
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Seadragon.ShowNavigationControl">
            <summary>
            Determines whether or not navigation buttons should be shown
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Seadragon.BlendTime">
            <summary>
            The amount of time in seconds when new tiles' blend changes from
            transparent to opaque. Default is 0.5
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Seadragon.AlwaysBlend">
            <summary>
            Determines whether or not tiles should always blend in and out,
            not just when they're first loaded. Default is false
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Seadragon.AutoHideControls">
            <summary>
            Determines whether or not controls should be automatically hidden when the user
            mover the mouse away from the viewer and the image has stopped animating. Default is true
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Seadragon.ImmediateRender">
            <summary>
            Determines whether or not the most appropriate tiles should always be rendered before
            any low-resolution tiles are rendered. The sharpening effect is lost, and instead
            a visible tiling effect occurs. Default is false
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Seadragon.WrapHorizontal">
            <summary>
            Determines whether or not the control uses horizontal wrapping
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Seadragon.WrapVertical">
            <summary>
            Determines whether or not the control uses vertical wrapping
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Seadragon.MinZoomDimension">
            <summary>
            Minimum size (in screen pixels) of any dimension that can be obtained by zooming out.
            Default is 16
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Seadragon.MaxZoomPixelRatio">
            <summary>
            Maximum pixel ratio (screen pixel to content pixel) that can be obtained by zooming in.
            Default is 4
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Seadragon.VisibilityRatio">
            <summary>
            The minimum portion of the viewport that must show visible content in both dimensions.
            Default is 0.1
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Seadragon.SpringStiffness">
            <summary>
            Determines how sharply springs used for animation move. Default is 5.0
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Seadragon.ImageLoaderLimit">
            <summary>
            The maximum number of concurrent image downloads that can be performed by
            each viewer. Default is 2
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Seadragon.ClickTimeThreshold">
            <summary>
            The maximum number of milliseconds that can pass between a mousedown and mouseup
            for an action to be considered as a quick click. Default is 200
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Seadragon.clickDistThreshold">
            <summary>
            The maximum number of pixels the mouse can move between a mousedown and mouseup
            for an action to be considered as a quick click. Default is 5
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Seadragon.ZoomPerClick">
            <summary>
            The factor by which images should zoom in on being clicked. Default is 2
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Seadragon.ZoomPerSecond">
            <summary>
            The factor by which images should zoom in each second the zoom buttons are held down.
            Default is 2
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Seadragon.MaxImageCacheCount">
            <summary>
            Maximum number of cached images
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Seadragon.MinPixelRatio">
            <summary>
            Minimum pixel ratio
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Seadragon.OnClientOpen">
            <summary>
            The name of a JavaScript function executed on the client side after an image is opened
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Seadragon.OnClientError">
            <summary>
            The name of a JavaScript function executed on the client side when the error event occurs
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Seadragon.OnClientIgnore">
            <summary>
            The name of a JavaScript function executed on the client side when the ignore event occurs
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Seadragon.OnClientResize">
            <summary>
            The name of a JavaScript function executed on the client side when an image is resized
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Seadragon.OnClientAnimationStart">
            <summary>
            The name of a JavaScript function executed on the client side when animation starts
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Seadragon.OnClientAnimationEnd">
            <summary>
            The name of a JavaScript function executed on the client side when animation ends
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Seadragon.OnClientAnimation">
            <summary>
            The name of a JavaScript function executed on animation on the client side
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Seadragon.MouseNavEnabled">
            <summary>
            Determines whether or not mouse navigation is enabled
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Seadragon.SourceUrl">
            <summary>
            A path for all UI images. It can be absolute or relative. If it is
            relative, it must be relative to an HTML page. This value change will affect
            only new viewers. Default is img
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Seadragon.ControlsCollection">
            <summary>
            A collection of SeaDragon controls
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Seadragon.Controls">
            <summary>
            A collection of controls
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Seadragon.OverlaysCollection">
            <summary>
            A collection of overlays
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.SliderExtender">
            <summary>
            The Slider extender allows upgrading an asp:TextBox to a graphical slider that allows
            a user to choose a numeric value from a finite range.
            </summary>
            <remarks>
            By declaring the extended TextBox as a trigger for an UpdatePanel, the Slider can fire the
            update whenever the handle is released. By setting RaiseChangeOnlyOnMouseUp to false, the
            update will be fired as soon as the Slider's value changes. The TooltipText property allows
            displaying some text when the mouse pointer hovers the slider's handle. A {0} placeholder
            in the text is replaced by the current value of the slider.
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.SliderExtender.Minimum">
            <summary>
            Minimum value allowed
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.SliderExtender.Maximum">
            <summary>
            Maximum value allowed
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.SliderExtender.RailCssClass">
            <summary>
            A CSS class for the slider's rail
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.SliderExtender.HandleImageUrl">
            <summary>
            The URL of an image to display as the slider's handle
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.SliderExtender.HandleCssClass">
            <summary>
            A CSS class for the slider's handle
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.SliderExtender.EnableHandleAnimation">
            <summary>
            Enable/disable the handle animation
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.SliderExtender.Steps">
            <summary>
            A number of discrete values inside the slider's range
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.SliderExtender.Orientation">
            <summary>
            Slider orientation
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.SliderExtender.Decimals">
            <summary>
            A number of decimal digits for the value
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.SliderExtender.BoundControlID">
            <summary>
            ID of the TextBox or Label that dynamically displays the slider's value
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.SliderExtender.Length">
            <summary>
            Width/height of a horizontal/vertical slider when the default layout is used
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.SliderExtender.RaiseChangeOnlyOnMouseUp">
            <summary>
            If true, fires the change event on the extended TextBox only when the
            left mouse button is released
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.SliderExtender.TooltipText">
            <summary>
            Text to display in a tooltip when the handle is hovered
            </summary>
            <remarks>
            The {0} placeholder in the text is replaced with the current value of the slider
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.SliderExtender.EnableKeyboard">
            <summary>
            Determines if the slider responds to arrow keys when it has focus
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.TabContainer">
            <summary>
            TabContainer is an ASP.NET AJAX Control, which creates a set of tabs that can be
            used to organize page content. TabContainer is a host for a number of TabPanel controls. 
            </summary>
        </member>
        <member name="E:AjaxControlToolkit.TabContainer.ActiveTabChanged">
            <summary>
            Fires on the server side when a tab is changed after a postback
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.TabContainer.ActiveTabIndexForClient">
            <summary>
            The first tab to show
            </summary>
            <remarks>
            For the client side
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.TabContainer.ActiveTabIndex">
            <summary>
            The first tab to show
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.TabContainer.Tabs">
            <summary>
            A collection of tabs
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.TabContainer.ActiveTab">
            <summary>
            The current active tab
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.TabContainer.AutoPostBack">
            <summary>
            Make an auto postback from JavaScript when a tab index changes
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.TabContainer.Height">
            <summary>
            Height of a tab body (does not include TabPanel headers)
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.TabContainer.Width">
            <summary>
            Width of the tab body
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.TabContainer.CssClass">
            <summary>
            The CSS class override used to define custom look and feel for tabs
            </summary>
            <remarks>
            See the Tabs Theming section for more details
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.TabContainer.ScrollBars">
            <summary>
            Determines whether or not to display scrollbars (None, Horizontal, Vertical, Both, Auto)
            in the TabContainer body
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.TabContainer.TabStripPlacement">
            <summary>
            Determines whether or not to render tabs on top of the container or below (Top, Bottom)
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.TabContainer.OnClientActiveTabChanged">
            <summary>
            Fires on the client side when a tab is changed
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.TabContainer.UniqueID">
            <summary>
            AutoPostback ID
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.TabContainer.UseVerticalStripPlacement">
            <summary>
            Determines whether or not to render tabs on the left or right side of the container
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.TabContainer.VerticalStripWidth">
            <summary>
            Width of tab panels when tabs are displayed vertically
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.TabContainer.OnDemand">
            <summary>
            Determines whether or not to render/load precise tabs on demand or all tabs on page load
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.TabPanel">
            <summary>
            TabPanel is a part of the TabContainer element. It can be used to organize page content.
            Each TabPanel defines its HeaderText or HeaderTemplate as well as the ContentTemplate that
            defines its content.The most recent tab should remain selected after a postback, and the
            Enabled state of tabs should be preserved after a postback. 
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.TabPanel.HeaderText">
            <summary>
            Text to display in the tab
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.TabPanel.HeaderTemplate">
            <summary>
            TemplateInstance.Single ITemplate to use to render the header
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.TabPanel.ContentTemplate">
            <summary>
            TemplateInstance.Single ITemplate to use for rendering the body
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.TabPanel.Enabled">
            <summary>
            Determines whether or not to display a tab for the TabPanel by default
            </summary>
            <remarks>
            This can be changed on the client side
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.TabPanel.ScrollBars">
            <summary>
            Detemines whether or not to display scrollbars (None, Horizontal, Vertical, Both, Auto)
            in the body of the TabPanel
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.TabPanel.OnClientClick">
            <summary>
            The name of a JavaScript function to attach to the tab's client-side Click event
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.TabPanel.DynamicServicePath">
            <summary>
            The URL of the web service to call
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.TabPanel.DynamicServiceMethod">
            <summary>
            The name of a method to call on the page or web service
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.TabPanel.DynamicContextKey">
            <summary>
            An arbitrary string value to be passed to the dynamically populated Web method
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.TabPanel.OnDemandMode">
            <summary>
            Determines whether or not to load a tab (Always, Once, None) when the container's onDemand property is true
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.TabPanel.OnClientPopulating">
            <summary>
            A handler to attach to the client-side populating event
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.TabPanel.OnClientPopulated">
            <summary>
            A handler to attach to the client-side populated event
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.TabPanel.UpdatePanelID">
            <summary>
            Introduces UpdatePanelID to the client side by prototyping it
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.TabPanel.WasLoadedOnce">
            <summary>
            Determines the loading status of the tab in Once demand mode
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.ToggleButtonExtender">
            <summary>
            ToggleButton is an ASP.NET AJAX extender that can be attached to an ASP.NET CheckBox control.
            ToggleButton enables the use of custom images to show the state of the CheckBox.
            The behavior of the CheckBox is unaffected.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ToggleButtonExtender.ImageWidth">
            <summary>
            The width of an image
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ToggleButtonExtender.ImageHeight">
            <summary>
            The height of an image
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ToggleButtonExtender.UncheckedImageUrl">
            <summary>
            The URL of an image to show when the toggle button is in the unchecked state
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ToggleButtonExtender.CheckedImageUrl">
            <summary>
            The URL of an image to show when the toggle button is in the checked state
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ToggleButtonExtender.DisabledUncheckedImageUrl">
            <summary>
            The URL of an image to show when the toggle button is disabled and in the unchecked state
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ToggleButtonExtender.DisabledCheckedImageUrl">
            <summary>
            The URL of an image to show when the toggle button is disabled and in the checked state
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ToggleButtonExtender.CheckedImageOverUrl">
            <summary>
            The URL of an image to show when the toggle button is in the checked
            state and the mouse is over the button
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ToggleButtonExtender.UncheckedImageOverUrl">
            <summary>
            The URL of an image to show when the toggle button is in the unchecked state and
            the mouse is over the button
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ToggleButtonExtender.UncheckedImageAlternateText">
            <summary>
            The alt text to show when the toggle button is in the unchecked state
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ToggleButtonExtender.CheckedImageAlternateText">
            <summary>
            The alt text to show when the toggle button is in the checked state
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ToggleButtonExtender.CheckedImageOverAlternateText">
            <summary>
            The alt text to show when the toggle button is in the checked state and the mouse is over the button
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ToggleButtonExtender.UncheckedImageOverAlternateText">
            <summary>
            The alt text to show when the toggle button is in the unchecked state and the mouse is over the button
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.RoundedCornersExtender">
            <summary>
            The RoundedCorners extender applies rounded corners to existing elements.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.RoundedCornersExtender.Radius">
            <summary>
            Radius of the corners (and height of the added area). The default is 5
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.RoundedCornersExtender.Corners">
            <summary>
            The corners of the target panel that should be rounded
            </summary>
            <remarks>
            Possible values:
            * None
            * TopLeft
            * TopRight
            * BottomRight
            * BottomLeft
            * Top
            * Right
            * Bottom
            * Left
            * All
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.RoundedCornersExtender.Color">
            <summary>
            Background color of the rounded corner areas
            </summary>
            <remarks>
            By default, this property gets the background color of the panel that it is attached to
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.RoundedCornersExtender.BorderColor">
            <summary>
            Color of the border
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.SlideShowExtender">
            <summary>
            SlideShow is an extender that targets image controls and dynamically shows
            each image for a certain amount of time.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.SlideShowExtender.SlideShowServiceMethod">
            <summary>
            The webservice method that will be called to supply images
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.SlideShowExtender.SlideShowServicePath">
            <summary>
            The path to the webservice that the extender will pull the images from
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.SlideShowExtender.ContextKey">
            <summary>
            User/page specific context provided to an optional overload of the
            web method described by ServiceMethod/ServicePath
            </summary>
            <remarks>
            If the context key is used, it should have the same signature with
            an additional parameter named contextKey of the string type
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.SlideShowExtender.UseContextKey">
            <summary>
            Whether or not the ContextKey property should be used
            </summary>
            <remarks>
            This will be automatically enabled if the ContextKey property is ever set
            (on either the client or the server). If the context key is used, it should
            have the same signature with an additional parameter named contextKey of the string type
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.SlideShowExtender.NextButtonID">
            <summary>
            ID of the button that will allow you to see the next picture
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.SlideShowExtender.PlayButtonID">
            <summary>
            ID of the button that will allow you to play/stop the slideshow
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.SlideShowExtender.PlayButtonText">
            <summary>
            The text to be shown in the play button to play the slideshow
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.SlideShowExtender.StopButtonText">
            <summary>
            The text to be shown in the play button to stop the slideshow
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.SlideShowExtender.PlayInterval">
            <summary>
            An interval in milliseconds between slide transitions in play mode
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.SlideShowExtender.ImageTitleLabelID">
            <summary>
            ID of Label displaying the current picture's title
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.SlideShowExtender.ImageDescriptionLabelID">
            <summary>
            ID of Label describing the current picture
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.SlideShowExtender.PreviousButtonID">
            <summary>
            ID of the button that will allow you to see the previous picture
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.SlideShowExtender.Loop">
            <summary>
            Setting this to true will allow you to view images in a round-robin fashion
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.SlideShowExtender.AutoPlay">
            <summary>
            Setting this to true will play the slideshow automatically on render
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.SlideShowExtender.SlideShowAnimationType">
            <summary>
            Type of animation used on changing from one slide to another
            </summary>
            <remarks>
            If you set SlideShowAnimationType to either SlideDown or SlideRight,
            then you must set both the Height and Width properties on the Image
            control being extended by the SlideShow extender
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.SlideShowExtender.ImageWidth">
            <summary>
            Width of the image container to animate slides smoothly from
            left to right or right to left
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.SlideShowExtender.ImageHeight">
            <summary>
            Height of the image container to animate slides smoothly from
            up to down or down to up
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.TextBoxWatermarkExtender">
            <summary>
            TextBoxWatermark is an ASP.NET AJAX extender that can be attached to an ASP.NET TextBox control
            to get watermark behavior. When a watermarked TextBox is empty, it displays a message to a user
            with a custom CSS style. Once the user has typed text into the TextBox, the watermarked appearance
            disappears. The watermark is intended to provide more information to a user about the TextBox without
            cluttering up the rest of the page.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.TextBoxWatermarkExtender.WatermarkText">
            <summary>
            Text to show when the control has no value
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.TextBoxWatermarkExtender.WatermarkCssClass">
            <summary>
            A CSS class to apply to the TextBox when it has no value (e.g. watermark text is shown)
            </summary>
        </member>
        <member name="T:AjaxControlToolkit.Twitter">
            <summary>
            Displays tweets from Twitter.com. Supports the Profile mode for showing tweets
            for a particular user and the Search mode for showing tweets that match a search string. 
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Twitter.Mode">
            <summary>
            A Twitter Screen name used in Profile mode
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Twitter.ScreenName">
            <summary>
            Twitter Screen Name used in Profile mode
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Twitter.Caption">
            <summary>
            Twitter Caption that appears in the default layout template
            </summary>
            <remarks>
            Enables you to display caption text in the header.
            In Profile mode, the default value is a user screen name
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.Twitter.Title">
            <summary>
            A twitter title that appears in the default layout template
            </summary>
            <remarks>
            Enables you to display title text in the header.
            In Profile mode, the default value is a full user name
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.Twitter.ProfileImageUrl">
            <summary>
            A Twitter Profile image that appears in the default layout template
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Twitter.Search">
            <summary>
            A twitter search query used in Search mode
            </summary>
            <remarks>
            You can build complex queries with search operators (https://dev.twitter.com/docs/using-search)
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.Twitter.IncludeRetweets">
            <summary>
            Indicates whether or not retweets are displayed in Profile mode
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Twitter.IncludeReplies">
            <summary>
            Indicates whether or not replies are displayed in Profile mode
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Twitter.Count">
            <summary>
            A maximum number of tweets to display. The default value is 5
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Twitter.CacheDuration">
            <summary>
            Time in minutes that twitter results are cached. The default value is 300 seconds
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Twitter.IsLiveContentOnDesignMode">
            <summary>
            Allows getting live content from the twitter server at design time
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.Twitter.StatusTemplate">
            <summary>
            A template that contains each status message (tweet)
            </summary>
            <remarks>
            An equivalent to the ItemTemplate in ListView
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.Twitter.AlternatingStatusTemplate">
            <summary>
            A template which is applied for alternating status messages (tweets)
            </summary>
            <remarks>
            An equivalent to the AlternatingItemTemplate in ListView
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.Twitter.EmptyDataTemplate">
            <summary>
            A template that displays content when there are no tweets
            </summary>
            <remarks>
            An equivalent to the EmptyDataTemplate in ListView
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.Twitter.LayoutTemplate">
            <summary>
            A template that contains HTML for the root container of the ListView content
            </summary>
            <remarks>
            Displays the root content of the Twitter control
            </remarks>
        </member>
        <member name="T:AjaxControlToolkit.UpdatePanelAnimationExtender">
            <summary>
            UpdatePanelAnimationExtender is an extender that allows you to play animations both while an UpdatePanel
            is updating and after its update is finished. The animations to be played are declaratively specified by using XML.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.UpdatePanelAnimationExtender.OnUpdating">
            <summary>
            Generic animation played as when any UpdatePanel begins updating
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.UpdatePanelAnimationExtender.OnUpdated">
            <summary>
            Generic animation played after the UpdatePanel has finished updating
            (but only if the UpdatePanel was changed)
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.UpdatePanelAnimationExtender.AlwaysFinishOnUpdatingAnimation">
            <summary>
            An optional property that makes sure the OnUpdated event will fire
            only after the onUpdating event is completed
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.UpdatePanelAnimationExtender.TriggerControlsClientID">
            <summary>
            ClientID's of the trigger controls
            </summary>
        </member>
        <member name="M:AjaxControlToolkit.UpdatePanelAnimationExtender.GetTargetControl">
            <summary>
            Returns the UpdatePanel, whose updates are used to play animations
            (this is also the default target of animations)
            </summary>
            <returns>Target control</returns>
        </member>
        <member name="M:AjaxControlToolkit.UpdatePanelAnimationExtender.GetControl(System.String)">
            <summary>
            Returns the control specified by its ID
            </summary>
            <param name="id" type="Number">ID of the control</param>
            <returns>Found control</returns>
        </member>
        <member name="T:AjaxControlToolkit.ValidatorCalloutExtender">
            <summary>
            ValidatorCallout is an ASP.NET AJAX extender that enhances the functionality
            of existing ASP.NET validators.
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ValidatorCalloutExtender.WarningIconImageUrl">
            <summary>
            The path to a custom warning icon image
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ValidatorCalloutExtender.CloseImageUrl">
            <summary>
            The path to a custom close image
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ValidatorCalloutExtender.CssClass">
            <summary>
            Name of the CSS class used to style ValidatorCallout
            </summary>
            <remarks>
            See the ValidatorCallout Theming section for more information
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.ValidatorCalloutExtender.HighlightCssClass">
            <summary>
            A CSS class to apply to an invalid field
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ValidatorCalloutExtender.PopupPosition">
            <summary>
            Indicates where the ValidatorCallout popup should appear relatively to the control to validate
            </summary>
            <remarks>
            Possible values:
            * BottomLeft
            * BottomRight
            * TopLeft
            * TopRight
            * Left
            * Right
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.ValidatorCalloutExtender.Width">
            <summary>
            The width of the callout
            </summary>
        </member>
        <member name="P:AjaxControlToolkit.ValidatorCalloutExtender.OnShow">
            <summary>
            Generic OnShow animation for the ValidatorCallout extender
            </summary>
            <remarks>
             The OnShow animation will be played each time the validation popup is displayed.
            The popup will be positioned correctly, but hidden. The animation can be used to
            display the popup along with any other visual effects.
            
            See Animation Reference for more details
            </remarks>
        </member>
        <member name="P:AjaxControlToolkit.ValidatorCalloutExtender.OnHide">
            <summary>
            Generic OnHide animation for the ValidatorCallout extender
            </summary>
            <remarks>
            The OnHide animation will be played each time the validation popup is hidden
            </remarks>
        </member>
    </members>
</doc>
